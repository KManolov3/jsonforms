{"version":3,"file":"jsonforms-angular-test.mjs","sources":["../../src/library/util.ts","../../src/library/boolean.ts","../../src/library/text.ts","../../src/library/number.ts","../../src/library/range.ts","../../src/library/layout.ts","../../src/library/index.ts","../../src/jsonforms-angular-test.ts"],"sourcesContent":["/*\n  The MIT License\n  \n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n  \n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n  \n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n  \n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\nimport type { Type } from '@angular/core';\nimport { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { JsonFormsAngularService, JsonFormsControl } from '@jsonforms/angular';\nimport type {\n  JsonFormsRendererRegistryEntry,\n  JsonSchema,\n  UISchemaElement,\n} from '@jsonforms/core';\nimport type { ErrorObject } from 'ajv';\n\nexport interface ErrorTestExpectation {\n  errorInstance: Type<any>;\n  numberOfElements: number;\n  indexOfElement: number;\n}\nexport interface TestConfig<C extends JsonFormsControl> {\n  imports: any[];\n  providers: any[];\n  componentUT: Type<C>;\n}\n\nexport const baseSetup = <C extends JsonFormsControl>(\n  testConfig: TestConfig<C>\n) => {\n  beforeEach(() => {\n    TestBed.configureTestingModule({\n      declarations: [testConfig.componentUT],\n      imports: testConfig.imports,\n      providers: [JsonFormsAngularService].concat(testConfig.providers),\n    }).compileComponents();\n  });\n};\n\nexport interface TestData<T extends UISchemaElement> {\n  data: any;\n  schema: JsonSchema;\n  uischema: T;\n  errors?: ErrorObject[];\n  renderers?: JsonFormsRendererRegistryEntry[];\n}\n\nexport const getJsonFormsService = (\n  component: JsonFormsControl\n): JsonFormsAngularService => {\n  return (component as any).jsonFormsService as JsonFormsAngularService;\n};\n\nexport const setupMockStore = (\n  fixture: ComponentFixture<any>,\n  testData: TestData<UISchemaElement>\n): void => {\n  const component = fixture.componentInstance;\n  component.uischema = testData.uischema;\n  component.schema = testData.schema;\n\n  getJsonFormsService(component).init({\n    core: {\n      data: testData.data,\n      schema: testData.schema,\n      errors: testData.errors,\n      uischema: testData.uischema,\n    },\n  });\n  getJsonFormsService(component).registerRenderers(testData.renderers);\n};\n","/*\n  The MIT License\n  \n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n  \n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n  \n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n  \n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\nimport type { DebugElement, Type } from '@angular/core';\nimport { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\nimport type { JsonFormsControl } from '@jsonforms/angular';\nimport { ControlElement, JsonSchema, Actions } from '@jsonforms/core';\nimport {\n  baseSetup,\n  ErrorTestExpectation,\n  TestConfig,\n  getJsonFormsService,\n} from './util';\n\nconst prepareComponent = <C extends JsonFormsControl, I>(\n  testConfig: TestConfig<C>,\n  instance: Type<I>\n) => {\n  const fixture = TestBed.createComponent(testConfig.componentUT);\n  const component = fixture.componentInstance;\n  const checkboxDebugElement = fixture.debugElement.query(\n    By.directive(instance)\n  );\n  const checkboxInstance = checkboxDebugElement.componentInstance;\n  const checkboxNativeElement = checkboxDebugElement.nativeElement;\n\n  return { fixture, component, checkboxInstance, checkboxNativeElement };\n};\n\nconst data = { foo: true };\nexport const defaultBooleanTestSchema: JsonSchema = {\n  type: 'object',\n  properties: {\n    foo: {\n      type: 'boolean',\n    },\n  },\n};\nconst uischema: ControlElement = {\n  type: 'Control',\n  scope: '#/properties/foo',\n};\nexport const defaultBooleanTestData = {\n  data,\n  schema: defaultBooleanTestSchema,\n  uischema,\n};\n\nexport const booleanBaseTest =\n  <C extends JsonFormsControl, I>(\n    testConfig: TestConfig<C>,\n    instance: Type<I>\n  ) =>\n  () => {\n    let fixture: ComponentFixture<any>;\n    let checkboxNativeElement: HTMLElement;\n    let checkboxInstance: any;\n    let component: C;\n\n    baseSetup(testConfig);\n\n    beforeEach(() => {\n      const preparedComponents = prepareComponent(testConfig, instance);\n      fixture = preparedComponents.fixture;\n      checkboxNativeElement = preparedComponents.checkboxNativeElement;\n      checkboxInstance = preparedComponents.checkboxInstance;\n      component = preparedComponents.component;\n    });\n\n    it('should render', () => {\n      component.uischema = uischema;\n\n      getJsonFormsService(component).init({\n        core: {\n          data: data,\n          schema: defaultBooleanTestSchema,\n          uischema: uischema,\n        },\n      });\n      component.ngOnInit();\n      fixture.detectChanges();\n      expect(component.data).toBe(true);\n      expect(checkboxInstance.checked).toBe(true);\n      expect(checkboxInstance.disabled).toBe(false);\n      // the component is wrapped in a div\n      const hasDisplayNone =\n        'none' === fixture.nativeElement.children[0].style.display;\n      const hasHidden = fixture.nativeElement.children[0].hidden;\n      expect(hasDisplayNone || hasHidden).toBeFalsy();\n    });\n    it('should support updating the state', () => {\n      component.uischema = uischema;\n\n      getJsonFormsService(component).init({\n        core: {\n          data: data,\n          schema: defaultBooleanTestSchema,\n          uischema: uischema,\n        },\n      });\n      component.ngOnInit();\n      fixture.detectChanges();\n\n      getJsonFormsService(component).updateCore(\n        Actions.update('foo', () => false)\n      );\n      fixture.detectChanges();\n      expect(component.data).toBe(false);\n      expect(checkboxInstance.checked).toBe(false);\n    });\n    it('should update with undefined value', () => {\n      component.uischema = uischema;\n\n      getJsonFormsService(component).init({\n        core: {\n          data: data,\n          schema: defaultBooleanTestSchema,\n          uischema: uischema,\n        },\n      });\n      component.ngOnInit();\n      fixture.detectChanges();\n\n      getJsonFormsService(component).updateCore(\n        Actions.update('foo', () => undefined)\n      );\n      fixture.detectChanges();\n      expect(component.data).toBe(undefined);\n      expect(checkboxInstance.checked).toBe(false);\n    });\n    it('should update with null value', () => {\n      component.uischema = uischema;\n\n      getJsonFormsService(component).init({\n        core: {\n          data: data,\n          schema: defaultBooleanTestSchema,\n          uischema: uischema,\n        },\n      });\n      component.ngOnInit();\n      fixture.detectChanges();\n\n      getJsonFormsService(component).updateCore(\n        Actions.update('foo', () => null)\n      );\n      fixture.detectChanges();\n      expect(component.data).toBe(null);\n      expect(checkboxInstance.checked).toBe(false);\n    });\n    it('should not update with wrong ref', () => {\n      component.uischema = uischema;\n\n      getJsonFormsService(component).init({\n        core: {\n          data: data,\n          schema: defaultBooleanTestSchema,\n          uischema: uischema,\n        },\n      });\n      component.ngOnInit();\n      fixture.detectChanges();\n\n      getJsonFormsService(component).updateCore(\n        Actions.update('foo', () => true)\n      );\n      getJsonFormsService(component).updateCore(\n        Actions.update('bar', () => false)\n      );\n      fixture.detectChanges();\n      expect(component.data).toBe(true);\n      expect(checkboxInstance.checked).toBe(true);\n    });\n    // store needed as we evaluate the calculated enabled value to disable/enable the control\n    it('can be disabled', () => {\n      component.uischema = uischema;\n      component.disabled = true;\n\n      getJsonFormsService(component).init({\n        core: {\n          data: data,\n          schema: defaultBooleanTestSchema,\n          uischema: uischema,\n        },\n      });\n      component.ngOnInit();\n      fixture.detectChanges();\n      expect(checkboxInstance.disabled).toBe(true);\n    });\n    // store needed as we evaluate the calculated enabled value to disable/enable the control\n    it('can be hidden', () => {\n      component.uischema = uischema;\n      component.visible = false;\n\n      getJsonFormsService(component).init({\n        core: {\n          data: data,\n          schema: defaultBooleanTestSchema,\n          uischema: uischema,\n        },\n      });\n      component.ngOnInit();\n      fixture.detectChanges();\n      // the component is wrapped in a div\n      const hasDisplayNone =\n        'none' === fixture.nativeElement.children[0].style.display;\n      const hasHidden = fixture.nativeElement.children[0].hidden;\n      expect(hasDisplayNone || hasHidden).toBeTruthy();\n    });\n\n    it('id should be present in output', () => {\n      component.uischema = uischema;\n      component.id = 'myId';\n\n      getJsonFormsService(component).init({\n        core: {\n          data: data,\n          schema: defaultBooleanTestSchema,\n          uischema: uischema,\n        },\n      });\n      component.ngOnInit();\n      fixture.detectChanges();\n      expect(checkboxNativeElement.id).toBe('myId');\n    });\n  };\nexport const booleanInputEventTest =\n  <C extends JsonFormsControl, I>(\n    testConfig: TestConfig<C>,\n    instance: Type<I>,\n    selectorForClick: string\n  ) =>\n  () => {\n    let fixture: ComponentFixture<any>;\n    let checkboxNativeElement: HTMLElement;\n    let checkboxInstance: any;\n    let component: C;\n    let elementToClick: any;\n\n    baseSetup(testConfig);\n\n    beforeEach(() => {\n      const preparedComponents = prepareComponent(testConfig, instance);\n      fixture = preparedComponents.fixture;\n      checkboxNativeElement = preparedComponents.checkboxNativeElement;\n      checkboxInstance = preparedComponents.checkboxInstance;\n      component = preparedComponents.component;\n\n      elementToClick = checkboxNativeElement.querySelector(selectorForClick);\n    });\n\n    it('should update via input event', () => {\n      component.uischema = uischema;\n      getJsonFormsService(component).init({\n        core: {\n          data: data,\n          schema: defaultBooleanTestSchema,\n          uischema: uischema,\n        },\n      });\n      fixture.detectChanges();\n      component.ngOnInit();\n\n      const spy = spyOn(component, 'onChange');\n      elementToClick.click();\n      // trigger change detection\n      fixture.detectChanges();\n\n      expect(spy).toHaveBeenCalled();\n      expect(checkboxInstance.checked).toBe(false);\n    });\n  };\n\nexport const booleanErrorTest =\n  <C extends JsonFormsControl, I>(\n    testConfig: TestConfig<C>,\n    instance: Type<I>,\n    errorTestInformation: ErrorTestExpectation\n  ) =>\n  () => {\n    let fixture: ComponentFixture<any>;\n    let component: C;\n\n    baseSetup(testConfig);\n\n    beforeEach(() => {\n      const preparedComponents = prepareComponent(testConfig, instance);\n      fixture = preparedComponents.fixture;\n      component = preparedComponents.component;\n    });\n    it('should display errors', () => {\n      component.uischema = uischema;\n\n      const formsService = getJsonFormsService(component);\n      formsService.init({\n        core: {\n          data,\n          schema: defaultBooleanTestSchema,\n          uischema: uischema,\n        },\n      });\n      formsService.updateCore(\n        Actions.updateErrors([\n          {\n            instancePath: '/foo',\n            message: 'Hi, this is me, test error!',\n            keyword: '',\n            schemaPath: '',\n            params: {},\n          },\n        ])\n      );\n      formsService.refresh();\n\n      component.ngOnInit();\n      fixture.detectChanges();\n      const debugErrors: DebugElement[] = fixture.debugElement.queryAll(\n        By.directive(errorTestInformation.errorInstance)\n      );\n      expect(debugErrors.length).toBe(errorTestInformation.numberOfElements);\n      expect(\n        debugErrors[errorTestInformation.indexOfElement].nativeElement\n          .textContent\n      ).toBe('Hi, this is me, test error!');\n    });\n  };\n","/*\n  The MIT License\n  \n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n  \n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n  \n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n  \n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\nimport type { DebugElement } from '@angular/core';\nimport { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\nimport type { JsonFormsControl } from '@jsonforms/angular';\nimport { Actions, ControlElement, JsonSchema } from '@jsonforms/core';\nimport {\n  baseSetup,\n  ErrorTestExpectation,\n  getJsonFormsService,\n  TestConfig,\n  TestData,\n} from './util';\n\ninterface ComponentResult<C extends JsonFormsControl> {\n  fixture: ComponentFixture<any>;\n  component: C;\n  textElement?: DebugElement;\n  textNativeElement?: any;\n}\n\nconst prepareComponent = <C extends JsonFormsControl>(\n  testConfig: TestConfig<C>,\n  instance?: string,\n  elementToUse?: (element: DebugElement) => any\n): ComponentResult<C> => {\n  const fixture = TestBed.createComponent(testConfig.componentUT);\n  const component = fixture.componentInstance;\n  const result: ComponentResult<C> = { fixture, component };\n  if (instance && elementToUse) {\n    const textElement = fixture.debugElement.query(By.css(instance));\n    const textNativeElement = elementToUse(textElement);\n    result.textElement = textElement;\n    result.textNativeElement = textNativeElement;\n  }\n  return result;\n};\nconst defaultData = { foo: 'foo' };\nconst defaultSchema: JsonSchema = {\n  type: 'object',\n  properties: {\n    foo: {\n      type: 'string',\n    },\n  },\n};\nconst defaultUischema: ControlElement = {\n  type: 'Control',\n  scope: '#/properties/foo',\n};\nexport const defaultTextTestData: TestData<ControlElement> = {\n  data: defaultData,\n  schema: defaultSchema,\n  uischema: defaultUischema,\n};\nexport const textBaseTest =\n  <C extends JsonFormsControl>(\n    testConfig: TestConfig<C>,\n    instance: string,\n    elementToUse: (element: DebugElement) => any,\n    testData: TestData<ControlElement> = defaultTextTestData\n  ) =>\n  () => {\n    let fixture: ComponentFixture<any>;\n    let textElement: DebugElement;\n    let textNativeElement: any;\n    let component: C;\n\n    baseSetup(testConfig);\n\n    beforeEach(() => {\n      const preparedComponents = prepareComponent(\n        testConfig,\n        instance,\n        elementToUse\n      );\n      fixture = preparedComponents.fixture;\n      textNativeElement = preparedComponents.textNativeElement;\n      textElement = preparedComponents.textElement;\n      component = preparedComponents.component;\n    });\n\n    it('should render', () => {\n      component.uischema = testData.uischema;\n      getJsonFormsService(component).init({\n        core: {\n          data: testData.data,\n          schema: testData.schema,\n          uischema: testData.uischema,\n        },\n      });\n      component.ngOnInit();\n      fixture.detectChanges();\n      expect(component.data).toBe('foo');\n      expect(textNativeElement.value).toBe('foo');\n      expect(textNativeElement.disabled).toBe(false);\n      // the component is wrapped in a div\n      const hasDisplayNone =\n        'none' === fixture.nativeElement.children[0].style.display;\n      const hasHidden = fixture.nativeElement.children[0].hidden;\n      expect(!hasDisplayNone && !hasHidden).toBeTruthy();\n    });\n\n    it('should support updating the state', () => {\n      component.uischema = testData.uischema;\n\n      getJsonFormsService(component).init({\n        core: {\n          data: testData.data,\n          schema: testData.schema,\n          uischema: testData.uischema,\n        },\n      });\n      component.ngOnInit();\n      fixture.detectChanges();\n\n      getJsonFormsService(component).updateCore(\n        Actions.update('foo', () => 'bar')\n      );\n      fixture.detectChanges();\n      expect(component.data).toBe('bar');\n      expect(textNativeElement.value).toBe('bar');\n    });\n    it('should update with undefined value', () => {\n      component.uischema = testData.uischema;\n\n      getJsonFormsService(component).init({\n        core: {\n          data: testData.data,\n          schema: testData.schema,\n          uischema: testData.uischema,\n        },\n      });\n      component.ngOnInit();\n      fixture.detectChanges();\n\n      getJsonFormsService(component).updateCore(\n        Actions.update('foo', () => undefined)\n      );\n      fixture.detectChanges();\n      expect(component.data).toBe(undefined);\n      expect(textNativeElement.value).toBe('');\n    });\n    it('should update with null value', () => {\n      component.uischema = testData.uischema;\n\n      getJsonFormsService(component).init({\n        core: {\n          data: testData.data,\n          schema: testData.schema,\n          uischema: testData.uischema,\n        },\n      });\n      component.ngOnInit();\n      fixture.detectChanges();\n\n      getJsonFormsService(component).updateCore(\n        Actions.update('foo', () => null)\n      );\n      fixture.detectChanges();\n      expect(component.data).toBe(null);\n      expect(textNativeElement.value).toBe('');\n    });\n    it('should not update with wrong ref', () => {\n      component.uischema = testData.uischema;\n\n      getJsonFormsService(component).init({\n        core: {\n          data: testData.data,\n          schema: testData.schema,\n          uischema: testData.uischema,\n        },\n      });\n      component.ngOnInit();\n      fixture.detectChanges();\n\n      getJsonFormsService(component).updateCore(\n        Actions.update('foo', () => 'foo')\n      );\n      getJsonFormsService(component).updateCore(\n        Actions.update('bar', () => 'bar')\n      );\n      fixture.detectChanges();\n      expect(component.data).toBe('foo');\n      expect(textNativeElement.value).toBe('foo');\n    });\n    // store needed as we evaluate the calculated enabled value to disable/enable the control\n    it('can be disabled', () => {\n      component.uischema = testData.uischema;\n      component.disabled = true;\n\n      getJsonFormsService(component).init({\n        core: {\n          data: testData.data,\n          schema: testData.schema,\n          uischema: testData.uischema,\n        },\n      });\n      component.ngOnInit();\n      fixture.detectChanges();\n      expect(textNativeElement.disabled).toBe(true);\n    });\n    it('can be hidden', () => {\n      component.uischema = testData.uischema;\n      component.visible = false;\n\n      getJsonFormsService(component).init({\n        core: {\n          data: testData.data,\n          schema: testData.schema,\n          uischema: testData.uischema,\n        },\n      });\n      component.ngOnInit();\n      fixture.detectChanges();\n      const hasDisplayNone =\n        'none' === fixture.nativeElement.children[0].style.display;\n      const hasHidden = fixture.nativeElement.children[0].hidden;\n      expect(hasDisplayNone || hasHidden).toBeTruthy();\n    });\n    it('id should be present in output', () => {\n      component.uischema = testData.uischema;\n      component.id = 'myId';\n      getJsonFormsService(component).init({\n        core: {\n          data: testData.data,\n          schema: testData.schema,\n          uischema: testData.uischema,\n        },\n      });\n      component.ngOnInit();\n      fixture.detectChanges();\n      expect(textElement.nativeElement.id).toBe('myId');\n    });\n  };\nexport const textInputEventTest =\n  <C extends JsonFormsControl>(\n    testConfig: TestConfig<C>,\n    instance: string,\n    elementToUse: (element: DebugElement) => any,\n    testData: TestData<ControlElement> = defaultTextTestData\n  ) =>\n  () => {\n    let fixture: ComponentFixture<any>;\n    let textNativeElement: any;\n    let component: C;\n\n    baseSetup(testConfig);\n\n    beforeEach(() => {\n      const preparedComponents = prepareComponent(\n        testConfig,\n        instance,\n        elementToUse\n      );\n      fixture = preparedComponents.fixture;\n      textNativeElement = preparedComponents.textNativeElement;\n      component = preparedComponents.component;\n    });\n\n    it('should update via input event', () => {\n      component.uischema = testData.uischema;\n\n      getJsonFormsService(component).init({\n        core: {\n          data: testData.data,\n          schema: testData.schema,\n          uischema: testData.uischema,\n        },\n      });\n      component.ngOnInit();\n      fixture.detectChanges();\n\n      const spy = spyOn(component, 'onChange');\n      textNativeElement.value = 'bar';\n      if (textNativeElement.dispatchEvent) {\n        textNativeElement.dispatchEvent(new Event('input'));\n      }\n      // trigger change detection\n      fixture.detectChanges();\n      expect(spy).toHaveBeenCalled();\n      expect(textNativeElement.value).toBe('bar');\n    });\n  };\nexport const textErrorTest =\n  <C extends JsonFormsControl>(\n    testConfig: TestConfig<C>,\n    errorTestInformation: ErrorTestExpectation,\n    testData: TestData<ControlElement> = defaultTextTestData\n  ) =>\n  () => {\n    let fixture: ComponentFixture<any>;\n    let component: C;\n\n    baseSetup(testConfig);\n\n    beforeEach(() => {\n      const preparedComponents = prepareComponent(testConfig);\n      fixture = preparedComponents.fixture;\n      component = preparedComponents.component;\n    });\n    it('should display errors', () => {\n      component.uischema = testData.uischema;\n\n      const formsService = getJsonFormsService(component);\n      formsService.init({\n        core: {\n          data: testData.data,\n          schema: testData.schema,\n          uischema: undefined,\n        },\n      });\n      formsService.updateCore(\n        Actions.updateErrors([\n          {\n            instancePath: '/foo',\n            message: 'Hi, this is me, test error!',\n            keyword: '',\n            schemaPath: '',\n            params: {},\n          },\n        ])\n      );\n      formsService.refresh();\n      component.ngOnInit();\n      fixture.detectChanges();\n      const debugErrors: DebugElement[] = fixture.debugElement.queryAll(\n        By.directive(errorTestInformation.errorInstance)\n      );\n      expect(debugErrors.length).toBe(errorTestInformation.numberOfElements);\n      expect(\n        debugErrors[errorTestInformation.indexOfElement].nativeElement\n          .textContent\n      ).toBe('Hi, this is me, test error!');\n    });\n  };\nexport const textTypeTest =\n  <C extends JsonFormsControl>(\n    testConfig: TestConfig<C>,\n    instance: string,\n    elementToUse: (element: DebugElement) => any,\n    testData: TestData<ControlElement> = defaultTextTestData\n  ) =>\n  () => {\n    let fixture: ComponentFixture<any>;\n    let component: C;\n    let textNativeElement: any;\n\n    baseSetup(testConfig);\n\n    beforeEach(() => {\n      const preparedComponents = prepareComponent(\n        testConfig,\n        instance,\n        elementToUse\n      );\n      fixture = preparedComponents.fixture;\n      component = preparedComponents.component;\n      textNativeElement = preparedComponents.textNativeElement;\n    });\n    it('should show password independent of schema', () => {\n      const uischema = JSON.parse(JSON.stringify(testData.uischema));\n      uischema.options = { format: 'password' };\n      const schema = JSON.parse(JSON.stringify(testData.schema));\n      schema.properties.foo.format = 'email';\n\n      component.uischema = uischema;\n      component.schema = schema;\n\n      getJsonFormsService(component).init({\n        core: { data: testData.data, schema: schema, uischema: uischema },\n      });\n      component.ngOnInit();\n      fixture.detectChanges();\n      expect(textNativeElement.type).toBe('password');\n    });\n    it('should show email', () => {\n      const schema = JSON.parse(JSON.stringify(testData.schema));\n      schema.properties.foo.format = 'email';\n\n      component.uischema = testData.uischema;\n      component.schema = schema;\n\n      getJsonFormsService(component).init({\n        core: {\n          data: testData.data,\n          schema: schema,\n          uischema: testData.uischema,\n        },\n      });\n      component.ngOnInit();\n      fixture.detectChanges();\n      expect(textNativeElement.type).toBe('email');\n    });\n    xit('should show tel', () => {\n      const schema = JSON.parse(JSON.stringify(testData.schema));\n      schema.properties.foo.format = 'tel';\n\n      component.uischema = testData.uischema;\n      component.schema = schema;\n\n      getJsonFormsService(component).init({\n        core: {\n          data: testData.data,\n          schema: schema,\n          uischema: testData.uischema,\n        },\n      });\n      component.ngOnInit();\n      fixture.detectChanges();\n      expect(textNativeElement.type).toBe('tel');\n    });\n    xit('should fallback to text', () => {\n      const schema = JSON.parse(JSON.stringify(testData.schema));\n      schema.properties.foo.format = 'foo';\n\n      component.uischema = testData.uischema;\n      component.schema = schema;\n\n      getJsonFormsService(component).init({\n        core: {\n          data: testData.data,\n          schema: schema,\n          uischema: testData.uischema,\n        },\n      });\n      component.ngOnInit();\n      fixture.detectChanges();\n      expect(textNativeElement.type).toBe('text');\n    });\n  };\n","/*\n  The MIT License\n  \n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n  \n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n  \n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n  \n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\nimport type { DebugElement } from '@angular/core';\nimport { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\nimport type { JsonFormsControl } from '@jsonforms/angular';\nimport { Actions, ControlElement, JsonSchema } from '@jsonforms/core';\nimport {\n  baseSetup,\n  ErrorTestExpectation,\n  getJsonFormsService,\n  setupMockStore,\n  TestConfig,\n  TestData,\n} from './util';\n\ninterface ComponentResult<C extends JsonFormsControl> {\n  fixture: ComponentFixture<any>;\n  component: C;\n  numberElement?: DebugElement;\n  numberNativeElement?: any;\n}\n\nexport const prepareComponent = <C extends JsonFormsControl>(\n  testConfig: TestConfig<C>,\n  instance?: string,\n  elementToUse?: (element: DebugElement) => any\n): ComponentResult<C> => {\n  const fixture = TestBed.createComponent(testConfig.componentUT);\n  const component = fixture.componentInstance;\n  const result: ComponentResult<C> = { fixture, component };\n  if (instance && elementToUse) {\n    const numberElement = fixture.debugElement.query(By.css(instance));\n    const numberNativeElement = elementToUse(numberElement);\n    result.numberElement = numberElement;\n    result.numberNativeElement = numberNativeElement;\n  }\n\n  return result;\n};\nconst defaultData = { foo: 123.123 };\nconst defaultSchema: JsonSchema = {\n  type: 'object',\n  properties: {\n    foo: {\n      type: 'number',\n    },\n  },\n};\nconst defaultUischema: ControlElement = {\n  type: 'Control',\n  scope: '#/properties/foo',\n};\nexport const defaultNumberTestData: TestData<ControlElement> = {\n  data: defaultData,\n  schema: defaultSchema,\n  uischema: defaultUischema,\n};\nexport const updateWithSiblingNumberValue = <C extends JsonFormsControl>(\n  fixture: ComponentFixture<C>,\n  testData: TestData<ControlElement>,\n  expectations: () => any\n) => {\n  setupMockStore(fixture, testData);\n  getJsonFormsService(fixture.componentInstance).init({\n    core: {\n      data: { foo: 123.123, bar: 456.456 },\n      schema: testData.schema,\n      uischema: undefined,\n    },\n  });\n  fixture.componentInstance.ngOnInit();\n  fixture.detectChanges();\n  expectations();\n};\n\nexport const numberBaseTest =\n  <C extends JsonFormsControl>(\n    testConfig: TestConfig<C>,\n    instance: string,\n    elementToUse: (element: DebugElement) => any,\n    testData: TestData<ControlElement> = defaultNumberTestData\n  ) =>\n  () => {\n    let fixture: ComponentFixture<any>;\n    let numberElement: DebugElement;\n    let numberNativeElement: any;\n    let component: C;\n\n    baseSetup(testConfig);\n\n    beforeEach(() => {\n      const preparedComponents = prepareComponent(\n        testConfig,\n        instance,\n        elementToUse\n      );\n      fixture = preparedComponents.fixture;\n      numberNativeElement = preparedComponents.numberNativeElement;\n      numberElement = preparedComponents.numberElement;\n      component = preparedComponents.component;\n    });\n\n    it('should render floats', () => {\n      component.uischema = testData.uischema;\n      getJsonFormsService(component).init({ core: testData });\n      getJsonFormsService(component).updateCore(\n        Actions.init(testData.data, testData.schema)\n      );\n      component.ngOnInit();\n      fixture.detectChanges();\n      expect(component.data).toBe(123.123);\n      expect(numberNativeElement.value).toBe('123.123');\n      // step is of type string\n      expect(numberNativeElement.step).toBe('0.1');\n      expect(numberNativeElement.disabled).toBe(false);\n      // the component is wrapped in a div\n      expect(fixture.nativeElement.children[0].style.display).not.toBe('none');\n    });\n\n    it('should render integers', () => {\n      const state = {\n        data: { foo: 123 },\n        schema: {\n          type: 'object',\n          properties: {\n            foo: { type: 'integer' },\n          },\n        },\n        uischema: testData.uischema,\n      };\n      component.uischema = testData.uischema;\n      getJsonFormsService(component).init({ core: state });\n      getJsonFormsService(component).updateCore(\n        Actions.init(state.data, state.schema)\n      );\n      component.ngOnInit();\n      fixture.detectChanges();\n\n      expect(component.data).toBe(123);\n      expect(numberNativeElement.value).toBe('123');\n      // step is of type string\n      expect(numberNativeElement.step).toBe('1');\n      expect(numberNativeElement.disabled).toBe(false);\n      // the component is wrapped in a div\n      expect(fixture.nativeElement.children[0].style.display).not.toBe('none');\n    });\n\n    it('should support updating the state', () => {\n      component.uischema = testData.uischema;\n      getJsonFormsService(component).init({ core: testData });\n      getJsonFormsService(component).updateCore(\n        Actions.init(testData.data, testData.schema)\n      );\n      component.ngOnInit();\n      fixture.detectChanges();\n      getJsonFormsService(fixture.componentInstance).updateCore(\n        Actions.update('foo', () => 456.456)\n      );\n      fixture.detectChanges();\n      expect(component.data).toBe(456.456);\n      expect(Number(numberNativeElement.value)).toBe(456.456);\n    });\n\n    it('should update with undefined value', () => {\n      component.uischema = testData.uischema;\n      getJsonFormsService(component).init({ core: testData });\n      getJsonFormsService(component).updateCore(\n        Actions.init(testData.data, testData.schema)\n      );\n      component.ngOnInit();\n      fixture.detectChanges();\n      getJsonFormsService(fixture.componentInstance).updateCore(\n        Actions.update('foo', () => undefined)\n      );\n      fixture.detectChanges();\n\n      expect(component.data).toBe(undefined);\n      expect(numberNativeElement.value).toBe('');\n    });\n\n    it('should update with null value', () => {\n      component.uischema = testData.uischema;\n      getJsonFormsService(component).init({ core: testData });\n      getJsonFormsService(component).updateCore(\n        Actions.init(testData.data, testData.schema)\n      );\n      component.ngOnInit();\n      fixture.detectChanges();\n      getJsonFormsService(fixture.componentInstance).updateCore(\n        Actions.update('foo', () => null)\n      );\n      fixture.detectChanges();\n      expect(component.data).toBe(null);\n      expect(numberNativeElement.value).toBe('');\n    });\n\n    it('should not update with wrong ref', () => {\n      component.uischema = testData.uischema;\n      getJsonFormsService(component).init({ core: testData });\n      getJsonFormsService(component).updateCore(\n        Actions.init(testData.data, testData.schema)\n      );\n      component.ngOnInit();\n      fixture.detectChanges();\n      getJsonFormsService(fixture.componentInstance).updateCore(\n        Actions.update('bar', () => 456.456)\n      );\n      fixture.detectChanges();\n      expect(component.data).toBe(123.123);\n      expect(Number(numberNativeElement.value)).toBe(123.123);\n    });\n\n    // store needed as we evaluate the calculated enabled value to disable/enable the control\n    it('can be disabled', () => {\n      component.uischema = testData.uischema;\n      component.disabled = true;\n\n      getJsonFormsService(component).init({\n        core: {\n          data: testData.data,\n          schema: testData.schema,\n          uischema: testData.uischema,\n        },\n      });\n      component.ngOnInit();\n      fixture.detectChanges();\n      expect(numberNativeElement.disabled).toBe(true);\n    });\n    // store needed as we evaluate the calculated enabled value to disable/enable the control\n    it('can be hidden', () => {\n      component.uischema = testData.uischema;\n      component.visible = false;\n\n      getJsonFormsService(component).init({\n        core: {\n          data: testData.data,\n          schema: testData.schema,\n          uischema: testData.uischema,\n        },\n      });\n      component.ngOnInit();\n      fixture.detectChanges();\n      const hasDisplayNone =\n        'none' === fixture.nativeElement.children[0].style.display;\n      const hasHidden = fixture.nativeElement.children[0].hidden;\n      expect(hasDisplayNone || hasHidden).toBeTruthy();\n    });\n\n    it('id should be present in output', () => {\n      component.uischema = testData.uischema;\n      component.id = 'myId';\n      getJsonFormsService(component).init({\n        core: {\n          data: testData.data,\n          schema: testData.schema,\n          uischema: testData.uischema,\n        },\n      });\n      component.ngOnInit();\n      fixture.detectChanges();\n      expect(numberElement.nativeElement.id).toBe('myId');\n    });\n  };\nexport const numberInputEventTest =\n  <C extends JsonFormsControl>(\n    testConfig: TestConfig<C>,\n    instance: string,\n    elementToUse: (element: DebugElement) => any,\n    testData: TestData<ControlElement> = defaultNumberTestData\n  ) =>\n  () => {\n    let fixture: ComponentFixture<any>;\n    let numberNativeElement: any;\n    let component: C;\n\n    baseSetup(testConfig);\n\n    beforeEach(() => {\n      const preparedComponents = prepareComponent(\n        testConfig,\n        instance,\n        elementToUse\n      );\n      fixture = preparedComponents.fixture;\n      numberNativeElement = preparedComponents.numberNativeElement;\n      component = preparedComponents.component;\n    });\n\n    it('should update via input event', () => {\n      component.uischema = testData.uischema as ControlElement;\n\n      getJsonFormsService(component).init({\n        core: {\n          data: testData.data,\n          schema: testData.schema,\n          uischema: undefined,\n        },\n      });\n      fixture.detectChanges();\n      component.ngOnInit();\n\n      const spy = spyOn(component, 'onChange');\n      numberNativeElement.value = 456.456;\n      if (numberNativeElement.dispatchEvent) {\n        numberNativeElement.dispatchEvent(new Event('input'));\n      }\n      // trigger change detection\n      fixture.detectChanges();\n      expect(spy).toHaveBeenCalled();\n      expect(Number(numberNativeElement.value)).toBe(456.456);\n    });\n  };\nexport const numberErrorTest =\n  <C extends JsonFormsControl>(\n    testConfig: TestConfig<C>,\n    errorTestInformation: ErrorTestExpectation,\n    testData: TestData<ControlElement> = defaultNumberTestData\n  ) =>\n  () => {\n    let fixture: ComponentFixture<any>;\n    let component: C;\n\n    baseSetup(testConfig);\n\n    beforeEach(() => {\n      const preparedComponents = prepareComponent(testConfig);\n      fixture = preparedComponents.fixture;\n      component = preparedComponents.component;\n    });\n\n    it('should display errors', () => {\n      component.uischema = testData.uischema;\n\n      const formsService = getJsonFormsService(component);\n      formsService.init({\n        core: {\n          data: testData.data,\n          schema: testData.schema,\n          uischema: undefined,\n        },\n      });\n      formsService.updateCore(\n        Actions.updateErrors([\n          {\n            instancePath: '/foo',\n            message: 'Hi, this is me, test error!',\n            keyword: '',\n            schemaPath: '',\n            params: {},\n          },\n        ])\n      );\n      formsService.refresh();\n      component.ngOnInit();\n      fixture.detectChanges();\n      const debugErrors: DebugElement[] = fixture.debugElement.queryAll(\n        By.directive(errorTestInformation.errorInstance)\n      );\n      expect(debugErrors.length).toBe(errorTestInformation.numberOfElements);\n      expect(\n        debugErrors[errorTestInformation.indexOfElement].nativeElement\n          .textContent\n      ).toBe('Hi, this is me, test error!');\n    });\n  };\n\nconst additionalSchema: JsonSchema = {\n  type: 'object',\n  properties: {\n    foo: {\n      type: 'number',\n      minimum: -42.42,\n      maximum: 42,\n      multipleOf: 3,\n    },\n  },\n};\nexport const additionalTestData: TestData<ControlElement> = {\n  data: defaultData,\n  schema: additionalSchema,\n  uischema: defaultUischema,\n};\n\nexport const numberAdditionalPropsTest =\n  <C extends JsonFormsControl>(\n    testConfig: TestConfig<C>,\n    instance: string,\n    elementToUse: (element: DebugElement) => any,\n    testData: TestData<ControlElement> = additionalTestData\n  ) =>\n  () => {\n    let fixture: ComponentFixture<any>;\n    let numberNativeElement: any;\n\n    baseSetup(testConfig);\n\n    beforeEach(() => {\n      const preparedComponents = prepareComponent(\n        testConfig,\n        instance,\n        elementToUse\n      );\n      fixture = preparedComponents.fixture;\n      numberNativeElement = preparedComponents.numberNativeElement;\n    });\n\n    it('should respect min,max,multipleOf', () => {\n      setupMockStore(fixture, testData);\n      getJsonFormsService(fixture.componentInstance).updateCore(\n        Actions.init(testData.data, testData.schema)\n      );\n      fixture.componentInstance.ngOnInit();\n      fixture.detectChanges();\n\n      // step, min and max are of type string on an input control\n      expect(numberNativeElement.step).toBe('3');\n      expect(numberNativeElement.min).toBe('-42.42');\n      expect(numberNativeElement.max).toBe('42');\n    });\n  };\n","/*\n  The MIT License\n  \n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n  \n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n  \n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n  \n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\nimport type { DebugElement, Type } from '@angular/core';\nimport { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\n\nimport type { JsonFormsControl } from '@jsonforms/angular';\nimport {\n  baseSetup,\n  ErrorTestExpectation,\n  setupMockStore,\n  TestConfig,\n  TestData,\n  getJsonFormsService,\n} from './util';\nimport { ControlElement, JsonSchema, Actions } from '@jsonforms/core';\n\ninterface ComponentResult<C extends JsonFormsControl> {\n  fixture: ComponentFixture<any>;\n  component: C;\n  rangeElement: DebugElement;\n  thumbElement: DebugElement;\n}\n\nconst prepareComponent = <C extends JsonFormsControl, I>(\n  testConfig: TestConfig<C>,\n  instance: Type<I>\n): ComponentResult<C> => {\n  const fixture = TestBed.createComponent(testConfig.componentUT);\n  const component = fixture.componentInstance;\n  const rangeElement = fixture.debugElement.query(By.directive(instance));\n  const thumbElement = fixture.debugElement.query(By.css('[matsliderthumb]')); //rangeElement.nativeElement.children[0]; // todo: find a safer way to get the 'matSliderThumb'\n  const result: ComponentResult<C> = {\n    fixture,\n    component,\n    rangeElement,\n    thumbElement,\n  };\n  return result;\n};\nexport const rangeDefaultData = { foo: 1.234 };\nexport const rangeDefaultSchema: JsonSchema = {\n  type: 'object',\n  properties: {\n    foo: {\n      type: 'number',\n      minimum: -42.42,\n      maximum: 42.42,\n      default: 0.42,\n    },\n  },\n};\nexport const rangeDefaultUischema: ControlElement = {\n  type: 'Control',\n  scope: '#/properties/foo',\n  options: { slider: true },\n};\nexport const rangeDefaultTestData: TestData<ControlElement> = {\n  data: rangeDefaultData,\n  schema: rangeDefaultSchema,\n  uischema: rangeDefaultUischema,\n};\n\nexport const rangeBaseTest =\n  <C extends JsonFormsControl, I>(\n    testConfig: TestConfig<C>,\n    instance: Type<I>\n  ) =>\n  () => {\n    let fixture: ComponentFixture<any>;\n    let rangeElement: DebugElement;\n    let thumbElement: DebugElement;\n    let component: C;\n\n    baseSetup(testConfig);\n\n    beforeEach(() => {\n      const preparedComponents = prepareComponent(testConfig, instance);\n      fixture = preparedComponents.fixture;\n      rangeElement = preparedComponents.rangeElement;\n      thumbElement = preparedComponents.thumbElement;\n      component = preparedComponents.component;\n    });\n\n    it('should render floats', () => {\n      component.uischema = rangeDefaultTestData.uischema;\n      component.schema = rangeDefaultTestData.schema;\n\n      getJsonFormsService(component).init({\n        core: {\n          data: rangeDefaultTestData.data,\n          schema: rangeDefaultTestData.schema,\n          uischema: rangeDefaultTestData.uischema,\n        },\n      });\n      component.ngOnInit();\n      fixture.detectChanges();\n      expect(component.data).toBe(1.234);\n      expect(thumbElement.componentInstance.data).toBe(1.234);\n      // step is of type string\n      expect(rangeElement.componentInstance.step).toBe(1);\n      expect(rangeElement.componentInstance.min).toBe(-42.42);\n      expect(rangeElement.componentInstance.max).toBe(42.42);\n      expect(rangeElement.componentInstance.disabled).toBe(false);\n      expect(fixture.nativeElement.children[0].style.display).not.toBe('none');\n    });\n\n    it('should render integer', () => {\n      component.uischema = rangeDefaultTestData.uischema;\n      const schema = JSON.parse(JSON.stringify(rangeDefaultTestData.schema));\n      schema.properties.foo.type = 'integer';\n      schema.properties.foo.minimum = -42;\n      schema.properties.foo.maximum = 42;\n      schema.properties.foo.default = 1;\n      setupMockStore(fixture, {\n        uischema: rangeDefaultTestData.uischema,\n        schema,\n        data: { foo: 12 },\n      });\n      getJsonFormsService(component).updateCore(\n        Actions.init({ foo: 12 }, schema, rangeDefaultTestData.uischema)\n      );\n\n      fixture.componentInstance.ngOnInit();\n      fixture.detectChanges();\n      expect(component.data).toBe(12);\n      expect(thumbElement.componentInstance.data).toBe(12);\n      // step is of type string\n      expect(rangeElement.componentInstance.step).toBe(1);\n      expect(rangeElement.componentInstance.min).toBe(-42);\n      expect(rangeElement.componentInstance.max).toBe(42);\n      expect(rangeElement.componentInstance.disabled).toBe(false);\n      // the component is wrapped in a div\n      expect(fixture.nativeElement.children[0].style.display).not.toBe('none');\n    });\n\n    it('should support updating the state', () => {\n      component.uischema = rangeDefaultTestData.uischema;\n      component.schema = rangeDefaultTestData.schema;\n\n      getJsonFormsService(component).init({\n        core: {\n          data: rangeDefaultTestData.data,\n          schema: rangeDefaultTestData.schema,\n          uischema: rangeDefaultTestData.uischema,\n        },\n      });\n      component.ngOnInit();\n      fixture.detectChanges();\n\n      getJsonFormsService(component).updateCore(\n        Actions.update('foo', () => 4.56)\n      );\n      fixture.detectChanges();\n      expect(component.data).toBe(4.56);\n      expect(thumbElement.componentInstance.data).toBe(4.56);\n    });\n    it('should update with undefined value', () => {\n      component.uischema = rangeDefaultTestData.uischema;\n      component.schema = rangeDefaultTestData.schema;\n\n      getJsonFormsService(component).init({\n        core: {\n          data: rangeDefaultTestData.data,\n          schema: rangeDefaultTestData.schema,\n          uischema: rangeDefaultTestData.uischema,\n        },\n      });\n      component.ngOnInit();\n      fixture.detectChanges();\n\n      getJsonFormsService(component).updateCore(\n        Actions.update('foo', () => undefined)\n      );\n      fixture.detectChanges();\n      expect(component.data).toBe(undefined);\n      expect(thumbElement.componentInstance.data).toBe(undefined);\n    });\n    it('should update with null value', () => {\n      component.uischema = rangeDefaultTestData.uischema;\n      component.schema = rangeDefaultTestData.schema;\n\n      getJsonFormsService(component).init({\n        core: {\n          data: rangeDefaultTestData.data,\n          schema: rangeDefaultTestData.schema,\n          uischema: rangeDefaultTestData.uischema,\n        },\n      });\n      component.ngOnInit();\n      fixture.detectChanges();\n\n      getJsonFormsService(component).updateCore(\n        Actions.update('foo', () => null)\n      );\n      fixture.detectChanges();\n      expect(component.data).toBe(null);\n      expect(thumbElement.componentInstance.data).toBe(null);\n    });\n    it('should not update with wrong ref', () => {\n      component.uischema = rangeDefaultTestData.uischema;\n      component.schema = rangeDefaultTestData.schema;\n\n      getJsonFormsService(component).init({\n        core: {\n          data: rangeDefaultTestData.data,\n          schema: rangeDefaultTestData.schema,\n          uischema: rangeDefaultTestData.uischema,\n        },\n      });\n      component.ngOnInit();\n      fixture.detectChanges();\n\n      getJsonFormsService(component).updateCore(\n        Actions.update('foo', () => 1.234)\n      );\n      getJsonFormsService(component).updateCore(\n        Actions.update('bar', () => 456.456)\n      );\n\n      fixture.detectChanges();\n      expect(component.data).toBe(1.234);\n      expect(thumbElement.componentInstance.data).toBe(1.234);\n    });\n    // store needed as we evaluate the calculated enabled value to disable/enable the control\n    it('can be disabled', () => {\n      component.uischema = rangeDefaultTestData.uischema;\n      component.schema = rangeDefaultTestData.schema;\n      component.disabled = true;\n\n      getJsonFormsService(component).init({\n        core: {\n          data: rangeDefaultTestData.data,\n          schema: rangeDefaultTestData.schema,\n          uischema: rangeDefaultTestData.uischema,\n        },\n      });\n      component.ngOnInit();\n      fixture.detectChanges();\n      expect(rangeElement.componentInstance.disabled).toBe(true);\n    });\n    it('can be hidden', () => {\n      component.uischema = rangeDefaultTestData.uischema;\n      component.schema = rangeDefaultTestData.schema;\n      component.visible = false;\n\n      getJsonFormsService(component).init({\n        core: {\n          data: rangeDefaultTestData.data,\n          schema: rangeDefaultTestData.schema,\n          uischema: rangeDefaultTestData.uischema,\n        },\n      });\n      fixture.detectChanges();\n      component.ngOnInit();\n      expect(fixture.nativeElement.children[0].style.display).toBe('none');\n    });\n    it('id should be present in output', () => {\n      component.uischema = rangeDefaultTestData.uischema;\n      component.schema = rangeDefaultTestData.schema;\n      component.id = 'myId';\n      getJsonFormsService(component).init({\n        core: {\n          data: rangeDefaultTestData.data,\n          schema: rangeDefaultTestData.schema,\n          uischema: rangeDefaultTestData.uischema,\n        },\n      });\n      component.ngOnInit();\n      fixture.detectChanges();\n      expect(rangeElement.nativeElement.id).toBe('myId');\n    });\n  };\nexport const rangeInputEventTest =\n  <C extends JsonFormsControl, I>(\n    testConfig: TestConfig<C>,\n    instance: Type<I>\n  ) =>\n  () => {\n    let fixture: ComponentFixture<any>;\n    let component: C;\n\n    baseSetup(testConfig);\n\n    beforeEach(() => {\n      const preparedComponents = prepareComponent(testConfig, instance);\n      fixture = preparedComponents.fixture;\n      component = preparedComponents.component;\n    });\n\n    xit('should update via input event', async () => {\n      component.uischema = rangeDefaultTestData.uischema;\n      component.schema = rangeDefaultTestData.schema;\n\n      getJsonFormsService(component).init({\n        core: {\n          data: rangeDefaultTestData.data,\n          schema: rangeDefaultTestData.schema,\n          uischema: rangeDefaultTestData.uischema,\n        },\n      });\n      component.ngOnInit();\n      fixture.detectChanges();\n\n      const spy = spyOn(component, 'onChange');\n\n      const sliderElement = fixture.debugElement.query(\n        By.css('.mat-slider')\n      ).nativeElement;\n\n      const trackElement = fixture.debugElement.query(\n        By.css('.mat-slider-wrapper')\n      ).nativeElement;\n      const dimensions = trackElement.getBoundingClientRect();\n      const x = dimensions.left + dimensions.width * 0.2;\n      const y = dimensions.top + dimensions.height * 0.2;\n\n      dispatchEvent(sliderElement, createMouseEvent('mousedown', x, y, 0));\n\n      // trigger change detection\n      fixture.detectChanges();\n      await fixture.whenStable();\n      expect(spy).toHaveBeenCalled();\n    });\n  };\nexport const rangeErrorTest =\n  <C extends JsonFormsControl, I>(\n    testConfig: TestConfig<C>,\n    instance: Type<I>,\n    errorTestInformation: ErrorTestExpectation\n  ) =>\n  () => {\n    let fixture: ComponentFixture<any>;\n    let component: C;\n\n    baseSetup(testConfig);\n\n    beforeEach(() => {\n      const preparedComponents = prepareComponent(testConfig, instance);\n      fixture = preparedComponents.fixture;\n      component = preparedComponents.component;\n    });\n    it('should display errors', () => {\n      component.uischema = rangeDefaultTestData.uischema;\n      component.schema = rangeDefaultTestData.schema;\n\n      const formsService = getJsonFormsService(component);\n      formsService.init({\n        core: {\n          data: rangeDefaultTestData.data,\n          schema: rangeDefaultTestData.schema,\n          uischema: undefined,\n        },\n      });\n      formsService.updateCore(\n        Actions.updateErrors([\n          {\n            instancePath: '/foo',\n            message: 'Hi, this is me, test error!',\n            keyword: '',\n            schemaPath: '',\n            params: {},\n          },\n        ])\n      );\n      formsService.refresh();\n\n      component.ngOnInit();\n      fixture.detectChanges();\n      const debugErrors: DebugElement[] = fixture.debugElement.queryAll(\n        By.directive(errorTestInformation.errorInstance)\n      );\n      expect(debugErrors.length).toBe(errorTestInformation.numberOfElements);\n      expect(\n        debugErrors[errorTestInformation.indexOfElement].nativeElement\n          .textContent\n      ).toBe('Hi, this is me, test error!');\n    });\n  };\n\n/** Creates a browser MouseEvent with the specified options. */\nconst createMouseEvent = (type: string, x = 0, y = 0, button = 0) => {\n  const event = document.createEvent('MouseEvent');\n\n  event.initMouseEvent(\n    type,\n    true /* canBubble */,\n    false /* cancelable */,\n    window /* view */,\n    0 /* detail */,\n    x /* screenX */,\n    y /* screenY */,\n    x /* clientX */,\n    y /* clientY */,\n    false /* ctrlKey */,\n    false /* altKey */,\n    false /* shiftKey */,\n    false /* metaKey */,\n    button /* button */,\n    null /* relatedTarget */\n  );\n\n  // `initMouseEvent` doesn't allow us to pass the `buttons` and\n  // defaults it to 0 which looks like a fake event.\n  Object.defineProperty(event, 'buttons', { get: () => 1 });\n\n  return event;\n};\n/** Utility to dispatch any event on a Node. */\nconst dispatchEvent = (node: Node | Window, event: Event): Event => {\n  node.dispatchEvent(event);\n  return event;\n};\n","/*\n  The MIT License\n  \n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n  \n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n  \n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n  \n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\nimport {\n  JsonFormsAngularService,\n  JsonFormsOutlet,\n  UnknownRenderer,\n} from '@jsonforms/angular';\nimport { ComponentFixture, TestBed } from '@angular/core/testing';\n\nexport const beforeEachLayoutTest = <LAYOUT>(\n  Renderer: any,\n  { declarations = [], imports = [], providers = [] }: any = {}\n): ComponentFixture<LAYOUT> => {\n  TestBed.configureTestingModule({\n    declarations: [Renderer, UnknownRenderer, JsonFormsOutlet, ...declarations],\n    imports,\n    providers: [JsonFormsAngularService, ...providers],\n  }).compileComponents();\n  return TestBed.createComponent(Renderer);\n};\n","/*\n  The MIT License\n  \n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n  \n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n  \n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n  \n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\nexport * from './boolean';\nexport * from './text';\nexport * from './number';\nexport * from './range';\nexport * from './util';\nexport * from './layout';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["prepareComponent","defaultData","defaultSchema","defaultUischema"],"mappings":";;;;;AA6Ca,MAAA,SAAS,GAAG,CACvB,UAAyB,KACvB;IACF,UAAU,CAAC,MAAK;QACd,OAAO,CAAC,sBAAsB,CAAC;AAC7B,YAAA,YAAY,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC;YACtC,OAAO,EAAE,UAAU,CAAC,OAAO;YAC3B,SAAS,EAAE,CAAC,uBAAuB,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC;SAClE,CAAC,CAAC,iBAAiB,EAAE,CAAC;AACzB,KAAC,CAAC,CAAC;AACL,EAAE;AAUW,MAAA,mBAAmB,GAAG,CACjC,SAA2B,KACA;IAC3B,OAAQ,SAAiB,CAAC,gBAA2C,CAAC;AACxE,EAAE;MAEW,cAAc,GAAG,CAC5B,OAA8B,EAC9B,QAAmC,KAC3B;AACR,IAAA,MAAM,SAAS,GAAG,OAAO,CAAC,iBAAiB,CAAC;AAC5C,IAAA,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;AACvC,IAAA,SAAS,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;AAEnC,IAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;AAClC,QAAA,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ,CAAC,IAAI;YACnB,MAAM,EAAE,QAAQ,CAAC,MAAM;YACvB,MAAM,EAAE,QAAQ,CAAC,MAAM;YACvB,QAAQ,EAAE,QAAQ,CAAC,QAAQ;AAC5B,SAAA;AACF,KAAA,CAAC,CAAC;IACH,mBAAmB,CAAC,SAAS,CAAC,CAAC,iBAAiB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;AACvE;;ACpDA,MAAMA,kBAAgB,GAAG,CACvB,UAAyB,EACzB,QAAiB,KACf;IACF,MAAM,OAAO,GAAG,OAAO,CAAC,eAAe,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;AAChE,IAAA,MAAM,SAAS,GAAG,OAAO,CAAC,iBAAiB,CAAC;AAC5C,IAAA,MAAM,oBAAoB,GAAG,OAAO,CAAC,YAAY,CAAC,KAAK,CACrD,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,CACvB,CAAC;AACF,IAAA,MAAM,gBAAgB,GAAG,oBAAoB,CAAC,iBAAiB,CAAC;AAChE,IAAA,MAAM,qBAAqB,GAAG,oBAAoB,CAAC,aAAa,CAAC;IAEjE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,gBAAgB,EAAE,qBAAqB,EAAE,CAAC;AACzE,CAAC,CAAC;AAEF,MAAM,IAAI,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;AACd,MAAA,wBAAwB,GAAe;AAClD,IAAA,IAAI,EAAE,QAAQ;AACd,IAAA,UAAU,EAAE;AACV,QAAA,GAAG,EAAE;AACH,YAAA,IAAI,EAAE,SAAS;AAChB,SAAA;AACF,KAAA;EACD;AACF,MAAM,QAAQ,GAAmB;AAC/B,IAAA,IAAI,EAAE,SAAS;AACf,IAAA,KAAK,EAAE,kBAAkB;CAC1B,CAAC;AACW,MAAA,sBAAsB,GAAG;IACpC,IAAI;AACJ,IAAA,MAAM,EAAE,wBAAwB;IAChC,QAAQ;EACR;AAEK,MAAM,eAAe,GAC1B,CACE,UAAyB,EACzB,QAAiB,KAEnB,MAAK;AACH,IAAA,IAAI,OAA8B,CAAC;AACnC,IAAA,IAAI,qBAAkC,CAAC;AACvC,IAAA,IAAI,gBAAqB,CAAC;AAC1B,IAAA,IAAI,SAAY,CAAC;IAEjB,SAAS,CAAC,UAAU,CAAC,CAAC;IAEtB,UAAU,CAAC,MAAK;QACd,MAAM,kBAAkB,GAAGA,kBAAgB,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;AAClE,QAAA,OAAO,GAAG,kBAAkB,CAAC,OAAO,CAAC;AACrC,QAAA,qBAAqB,GAAG,kBAAkB,CAAC,qBAAqB,CAAC;AACjE,QAAA,gBAAgB,GAAG,kBAAkB,CAAC,gBAAgB,CAAC;AACvD,QAAA,SAAS,GAAG,kBAAkB,CAAC,SAAS,CAAC;AAC3C,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,eAAe,EAAE,MAAK;AACvB,QAAA,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAE9B,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;AAClC,YAAA,IAAI,EAAE;AACJ,gBAAA,IAAI,EAAE,IAAI;AACV,gBAAA,MAAM,EAAE,wBAAwB;AAChC,gBAAA,QAAQ,EAAE,QAAQ;AACnB,aAAA;AACF,SAAA,CAAC,CAAC;QACH,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClC,MAAM,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5C,MAAM,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;AAE9C,QAAA,MAAM,cAAc,GAClB,MAAM,KAAK,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;AAC7D,QAAA,MAAM,SAAS,GAAG,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QAC3D,MAAM,CAAC,cAAc,IAAI,SAAS,CAAC,CAAC,SAAS,EAAE,CAAC;AAClD,KAAC,CAAC,CAAC;AACH,IAAA,EAAE,CAAC,mCAAmC,EAAE,MAAK;AAC3C,QAAA,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAE9B,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;AAClC,YAAA,IAAI,EAAE;AACJ,gBAAA,IAAI,EAAE,IAAI;AACV,gBAAA,MAAM,EAAE,wBAAwB;AAChC,gBAAA,QAAQ,EAAE,QAAQ;AACnB,aAAA;AACF,SAAA,CAAC,CAAC;QACH,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;AAExB,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,UAAU,CACvC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,KAAK,CAAC,CACnC,CAAC;QACF,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACnC,MAAM,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC/C,KAAC,CAAC,CAAC;AACH,IAAA,EAAE,CAAC,oCAAoC,EAAE,MAAK;AAC5C,QAAA,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAE9B,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;AAClC,YAAA,IAAI,EAAE;AACJ,gBAAA,IAAI,EAAE,IAAI;AACV,gBAAA,MAAM,EAAE,wBAAwB;AAChC,gBAAA,QAAQ,EAAE,QAAQ;AACnB,aAAA;AACF,SAAA,CAAC,CAAC;QACH,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;AAExB,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,UAAU,CACvC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,SAAS,CAAC,CACvC,CAAC;QACF,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACvC,MAAM,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC/C,KAAC,CAAC,CAAC;AACH,IAAA,EAAE,CAAC,+BAA+B,EAAE,MAAK;AACvC,QAAA,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAE9B,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;AAClC,YAAA,IAAI,EAAE;AACJ,gBAAA,IAAI,EAAE,IAAI;AACV,gBAAA,MAAM,EAAE,wBAAwB;AAChC,gBAAA,QAAQ,EAAE,QAAQ;AACnB,aAAA;AACF,SAAA,CAAC,CAAC;QACH,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;AAExB,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,UAAU,CACvC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,IAAI,CAAC,CAClC,CAAC;QACF,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClC,MAAM,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC/C,KAAC,CAAC,CAAC;AACH,IAAA,EAAE,CAAC,kCAAkC,EAAE,MAAK;AAC1C,QAAA,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAE9B,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;AAClC,YAAA,IAAI,EAAE;AACJ,gBAAA,IAAI,EAAE,IAAI;AACV,gBAAA,MAAM,EAAE,wBAAwB;AAChC,gBAAA,QAAQ,EAAE,QAAQ;AACnB,aAAA;AACF,SAAA,CAAC,CAAC;QACH,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;AAExB,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,UAAU,CACvC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,IAAI,CAAC,CAClC,CAAC;AACF,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,UAAU,CACvC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,KAAK,CAAC,CACnC,CAAC;QACF,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClC,MAAM,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC9C,KAAC,CAAC,CAAC;;AAEH,IAAA,EAAE,CAAC,iBAAiB,EAAE,MAAK;AACzB,QAAA,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC9B,QAAA,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC;AAE1B,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;AAClC,YAAA,IAAI,EAAE;AACJ,gBAAA,IAAI,EAAE,IAAI;AACV,gBAAA,MAAM,EAAE,wBAAwB;AAChC,gBAAA,QAAQ,EAAE,QAAQ;AACnB,aAAA;AACF,SAAA,CAAC,CAAC;QACH,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,MAAM,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/C,KAAC,CAAC,CAAC;;AAEH,IAAA,EAAE,CAAC,eAAe,EAAE,MAAK;AACvB,QAAA,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC9B,QAAA,SAAS,CAAC,OAAO,GAAG,KAAK,CAAC;AAE1B,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;AAClC,YAAA,IAAI,EAAE;AACJ,gBAAA,IAAI,EAAE,IAAI;AACV,gBAAA,MAAM,EAAE,wBAAwB;AAChC,gBAAA,QAAQ,EAAE,QAAQ;AACnB,aAAA;AACF,SAAA,CAAC,CAAC;QACH,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;;AAExB,QAAA,MAAM,cAAc,GAClB,MAAM,KAAK,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;AAC7D,QAAA,MAAM,SAAS,GAAG,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QAC3D,MAAM,CAAC,cAAc,IAAI,SAAS,CAAC,CAAC,UAAU,EAAE,CAAC;AACnD,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,gCAAgC,EAAE,MAAK;AACxC,QAAA,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC9B,QAAA,SAAS,CAAC,EAAE,GAAG,MAAM,CAAC;AAEtB,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;AAClC,YAAA,IAAI,EAAE;AACJ,gBAAA,IAAI,EAAE,IAAI;AACV,gBAAA,MAAM,EAAE,wBAAwB;AAChC,gBAAA,QAAQ,EAAE,QAAQ;AACnB,aAAA;AACF,SAAA,CAAC,CAAC;QACH,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,MAAM,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAChD,KAAC,CAAC,CAAC;AACL,EAAE;AACG,MAAM,qBAAqB,GAChC,CACE,UAAyB,EACzB,QAAiB,EACjB,gBAAwB,KAE1B,MAAK;AACH,IAAA,IAAI,OAA8B,CAAC;AACnC,IAAA,IAAI,qBAAkC,CAAC;AACvC,IAAA,IAAI,gBAAqB,CAAC;AAC1B,IAAA,IAAI,SAAY,CAAC;AACjB,IAAA,IAAI,cAAmB,CAAC;IAExB,SAAS,CAAC,UAAU,CAAC,CAAC;IAEtB,UAAU,CAAC,MAAK;QACd,MAAM,kBAAkB,GAAGA,kBAAgB,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;AAClE,QAAA,OAAO,GAAG,kBAAkB,CAAC,OAAO,CAAC;AACrC,QAAA,qBAAqB,GAAG,kBAAkB,CAAC,qBAAqB,CAAC;AACjE,QAAA,gBAAgB,GAAG,kBAAkB,CAAC,gBAAgB,CAAC;AACvD,QAAA,SAAS,GAAG,kBAAkB,CAAC,SAAS,CAAC;AAEzC,QAAA,cAAc,GAAG,qBAAqB,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;AACzE,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,+BAA+B,EAAE,MAAK;AACvC,QAAA,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC9B,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;AAClC,YAAA,IAAI,EAAE;AACJ,gBAAA,IAAI,EAAE,IAAI;AACV,gBAAA,MAAM,EAAE,wBAAwB;AAChC,gBAAA,QAAQ,EAAE,QAAQ;AACnB,aAAA;AACF,SAAA,CAAC,CAAC;QACH,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,SAAS,CAAC,QAAQ,EAAE,CAAC;QAErB,MAAM,GAAG,GAAG,KAAK,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;QACzC,cAAc,CAAC,KAAK,EAAE,CAAC;;QAEvB,OAAO,CAAC,aAAa,EAAE,CAAC;AAExB,QAAA,MAAM,CAAC,GAAG,CAAC,CAAC,gBAAgB,EAAE,CAAC;QAC/B,MAAM,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC/C,KAAC,CAAC,CAAC;AACL,EAAE;AAEG,MAAM,gBAAgB,GAC3B,CACE,UAAyB,EACzB,QAAiB,EACjB,oBAA0C,KAE5C,MAAK;AACH,IAAA,IAAI,OAA8B,CAAC;AACnC,IAAA,IAAI,SAAY,CAAC;IAEjB,SAAS,CAAC,UAAU,CAAC,CAAC;IAEtB,UAAU,CAAC,MAAK;QACd,MAAM,kBAAkB,GAAGA,kBAAgB,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;AAClE,QAAA,OAAO,GAAG,kBAAkB,CAAC,OAAO,CAAC;AACrC,QAAA,SAAS,GAAG,kBAAkB,CAAC,SAAS,CAAC;AAC3C,KAAC,CAAC,CAAC;AACH,IAAA,EAAE,CAAC,uBAAuB,EAAE,MAAK;AAC/B,QAAA,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAE9B,QAAA,MAAM,YAAY,GAAG,mBAAmB,CAAC,SAAS,CAAC,CAAC;QACpD,YAAY,CAAC,IAAI,CAAC;AAChB,YAAA,IAAI,EAAE;gBACJ,IAAI;AACJ,gBAAA,MAAM,EAAE,wBAAwB;AAChC,gBAAA,QAAQ,EAAE,QAAQ;AACnB,aAAA;AACF,SAAA,CAAC,CAAC;AACH,QAAA,YAAY,CAAC,UAAU,CACrB,OAAO,CAAC,YAAY,CAAC;AACnB,YAAA;AACE,gBAAA,YAAY,EAAE,MAAM;AACpB,gBAAA,OAAO,EAAE,6BAA6B;AACtC,gBAAA,OAAO,EAAE,EAAE;AACX,gBAAA,UAAU,EAAE,EAAE;AACd,gBAAA,MAAM,EAAE,EAAE;AACX,aAAA;AACF,SAAA,CAAC,CACH,CAAC;QACF,YAAY,CAAC,OAAO,EAAE,CAAC;QAEvB,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;AACxB,QAAA,MAAM,WAAW,GAAmB,OAAO,CAAC,YAAY,CAAC,QAAQ,CAC/D,EAAE,CAAC,SAAS,CAAC,oBAAoB,CAAC,aAAa,CAAC,CACjD,CAAC;AACF,QAAA,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,CAAC;QACvE,MAAM,CACJ,WAAW,CAAC,oBAAoB,CAAC,cAAc,CAAC,CAAC,aAAa;AAC3D,aAAA,WAAW,CACf,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;AACxC,KAAC,CAAC,CAAC;AACL;;AC/SF,MAAMA,kBAAgB,GAAG,CACvB,UAAyB,EACzB,QAAiB,EACjB,YAA6C,KACvB;IACtB,MAAM,OAAO,GAAG,OAAO,CAAC,eAAe,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;AAChE,IAAA,MAAM,SAAS,GAAG,OAAO,CAAC,iBAAiB,CAAC;AAC5C,IAAA,MAAM,MAAM,GAAuB,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC;IAC1D,IAAI,QAAQ,IAAI,YAAY,EAAE;AAC5B,QAAA,MAAM,WAAW,GAAG,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;AACjE,QAAA,MAAM,iBAAiB,GAAG,YAAY,CAAC,WAAW,CAAC,CAAC;AACpD,QAAA,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC;AACjC,QAAA,MAAM,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;AAC9C,KAAA;AACD,IAAA,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AACF,MAAMC,aAAW,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC;AACnC,MAAMC,eAAa,GAAe;AAChC,IAAA,IAAI,EAAE,QAAQ;AACd,IAAA,UAAU,EAAE;AACV,QAAA,GAAG,EAAE;AACH,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AACF,MAAMC,iBAAe,GAAmB;AACtC,IAAA,IAAI,EAAE,SAAS;AACf,IAAA,KAAK,EAAE,kBAAkB;CAC1B,CAAC;AACW,MAAA,mBAAmB,GAA6B;AAC3D,IAAA,IAAI,EAAEF,aAAW;AACjB,IAAA,MAAM,EAAEC,eAAa;AACrB,IAAA,QAAQ,EAAEC,iBAAe;EACzB;AACW,MAAA,YAAY,GACvB,CACE,UAAyB,EACzB,QAAgB,EAChB,YAA4C,EAC5C,QAAqC,GAAA,mBAAmB,KAE1D,MAAK;AACH,IAAA,IAAI,OAA8B,CAAC;AACnC,IAAA,IAAI,WAAyB,CAAC;AAC9B,IAAA,IAAI,iBAAsB,CAAC;AAC3B,IAAA,IAAI,SAAY,CAAC;IAEjB,SAAS,CAAC,UAAU,CAAC,CAAC;IAEtB,UAAU,CAAC,MAAK;QACd,MAAM,kBAAkB,GAAGH,kBAAgB,CACzC,UAAU,EACV,QAAQ,EACR,YAAY,CACb,CAAC;AACF,QAAA,OAAO,GAAG,kBAAkB,CAAC,OAAO,CAAC;AACrC,QAAA,iBAAiB,GAAG,kBAAkB,CAAC,iBAAiB,CAAC;AACzD,QAAA,WAAW,GAAG,kBAAkB,CAAC,WAAW,CAAC;AAC7C,QAAA,SAAS,GAAG,kBAAkB,CAAC,SAAS,CAAC;AAC3C,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,eAAe,EAAE,MAAK;AACvB,QAAA,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;AACvC,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;AAClC,YAAA,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ,CAAC,IAAI;gBACnB,MAAM,EAAE,QAAQ,CAAC,MAAM;gBACvB,QAAQ,EAAE,QAAQ,CAAC,QAAQ;AAC5B,aAAA;AACF,SAAA,CAAC,CAAC;QACH,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACnC,MAAM,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5C,MAAM,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;AAE/C,QAAA,MAAM,cAAc,GAClB,MAAM,KAAK,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;AAC7D,QAAA,MAAM,SAAS,GAAG,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QAC3D,MAAM,CAAC,CAAC,cAAc,IAAI,CAAC,SAAS,CAAC,CAAC,UAAU,EAAE,CAAC;AACrD,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,mCAAmC,EAAE,MAAK;AAC3C,QAAA,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;AAEvC,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;AAClC,YAAA,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ,CAAC,IAAI;gBACnB,MAAM,EAAE,QAAQ,CAAC,MAAM;gBACvB,QAAQ,EAAE,QAAQ,CAAC,QAAQ;AAC5B,aAAA;AACF,SAAA,CAAC,CAAC;QACH,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;AAExB,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,UAAU,CACvC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,KAAK,CAAC,CACnC,CAAC;QACF,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACnC,MAAM,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC9C,KAAC,CAAC,CAAC;AACH,IAAA,EAAE,CAAC,oCAAoC,EAAE,MAAK;AAC5C,QAAA,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;AAEvC,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;AAClC,YAAA,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ,CAAC,IAAI;gBACnB,MAAM,EAAE,QAAQ,CAAC,MAAM;gBACvB,QAAQ,EAAE,QAAQ,CAAC,QAAQ;AAC5B,aAAA;AACF,SAAA,CAAC,CAAC;QACH,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;AAExB,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,UAAU,CACvC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,SAAS,CAAC,CACvC,CAAC;QACF,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACvC,MAAM,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC3C,KAAC,CAAC,CAAC;AACH,IAAA,EAAE,CAAC,+BAA+B,EAAE,MAAK;AACvC,QAAA,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;AAEvC,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;AAClC,YAAA,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ,CAAC,IAAI;gBACnB,MAAM,EAAE,QAAQ,CAAC,MAAM;gBACvB,QAAQ,EAAE,QAAQ,CAAC,QAAQ;AAC5B,aAAA;AACF,SAAA,CAAC,CAAC;QACH,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;AAExB,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,UAAU,CACvC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,IAAI,CAAC,CAClC,CAAC;QACF,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClC,MAAM,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC3C,KAAC,CAAC,CAAC;AACH,IAAA,EAAE,CAAC,kCAAkC,EAAE,MAAK;AAC1C,QAAA,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;AAEvC,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;AAClC,YAAA,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ,CAAC,IAAI;gBACnB,MAAM,EAAE,QAAQ,CAAC,MAAM;gBACvB,QAAQ,EAAE,QAAQ,CAAC,QAAQ;AAC5B,aAAA;AACF,SAAA,CAAC,CAAC;QACH,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;AAExB,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,UAAU,CACvC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,KAAK,CAAC,CACnC,CAAC;AACF,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,UAAU,CACvC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,KAAK,CAAC,CACnC,CAAC;QACF,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACnC,MAAM,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC9C,KAAC,CAAC,CAAC;;AAEH,IAAA,EAAE,CAAC,iBAAiB,EAAE,MAAK;AACzB,QAAA,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;AACvC,QAAA,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC;AAE1B,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;AAClC,YAAA,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ,CAAC,IAAI;gBACnB,MAAM,EAAE,QAAQ,CAAC,MAAM;gBACvB,QAAQ,EAAE,QAAQ,CAAC,QAAQ;AAC5B,aAAA;AACF,SAAA,CAAC,CAAC;QACH,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,MAAM,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAChD,KAAC,CAAC,CAAC;AACH,IAAA,EAAE,CAAC,eAAe,EAAE,MAAK;AACvB,QAAA,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;AACvC,QAAA,SAAS,CAAC,OAAO,GAAG,KAAK,CAAC;AAE1B,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;AAClC,YAAA,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ,CAAC,IAAI;gBACnB,MAAM,EAAE,QAAQ,CAAC,MAAM;gBACvB,QAAQ,EAAE,QAAQ,CAAC,QAAQ;AAC5B,aAAA;AACF,SAAA,CAAC,CAAC;QACH,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;AACxB,QAAA,MAAM,cAAc,GAClB,MAAM,KAAK,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;AAC7D,QAAA,MAAM,SAAS,GAAG,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QAC3D,MAAM,CAAC,cAAc,IAAI,SAAS,CAAC,CAAC,UAAU,EAAE,CAAC;AACnD,KAAC,CAAC,CAAC;AACH,IAAA,EAAE,CAAC,gCAAgC,EAAE,MAAK;AACxC,QAAA,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;AACvC,QAAA,SAAS,CAAC,EAAE,GAAG,MAAM,CAAC;AACtB,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;AAClC,YAAA,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ,CAAC,IAAI;gBACnB,MAAM,EAAE,QAAQ,CAAC,MAAM;gBACvB,QAAQ,EAAE,QAAQ,CAAC,QAAQ;AAC5B,aAAA;AACF,SAAA,CAAC,CAAC;QACH,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;AACxB,QAAA,MAAM,CAAC,WAAW,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACpD,KAAC,CAAC,CAAC;AACL,EAAE;AACS,MAAA,kBAAkB,GAC7B,CACE,UAAyB,EACzB,QAAgB,EAChB,YAA4C,EAC5C,QAAqC,GAAA,mBAAmB,KAE1D,MAAK;AACH,IAAA,IAAI,OAA8B,CAAC;AACnC,IAAA,IAAI,iBAAsB,CAAC;AAC3B,IAAA,IAAI,SAAY,CAAC;IAEjB,SAAS,CAAC,UAAU,CAAC,CAAC;IAEtB,UAAU,CAAC,MAAK;QACd,MAAM,kBAAkB,GAAGA,kBAAgB,CACzC,UAAU,EACV,QAAQ,EACR,YAAY,CACb,CAAC;AACF,QAAA,OAAO,GAAG,kBAAkB,CAAC,OAAO,CAAC;AACrC,QAAA,iBAAiB,GAAG,kBAAkB,CAAC,iBAAiB,CAAC;AACzD,QAAA,SAAS,GAAG,kBAAkB,CAAC,SAAS,CAAC;AAC3C,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,+BAA+B,EAAE,MAAK;AACvC,QAAA,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;AAEvC,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;AAClC,YAAA,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ,CAAC,IAAI;gBACnB,MAAM,EAAE,QAAQ,CAAC,MAAM;gBACvB,QAAQ,EAAE,QAAQ,CAAC,QAAQ;AAC5B,aAAA;AACF,SAAA,CAAC,CAAC;QACH,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;QAExB,MAAM,GAAG,GAAG,KAAK,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;AACzC,QAAA,iBAAiB,CAAC,KAAK,GAAG,KAAK,CAAC;QAChC,IAAI,iBAAiB,CAAC,aAAa,EAAE;YACnC,iBAAiB,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;AACrD,SAAA;;QAED,OAAO,CAAC,aAAa,EAAE,CAAC;AACxB,QAAA,MAAM,CAAC,GAAG,CAAC,CAAC,gBAAgB,EAAE,CAAC;QAC/B,MAAM,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC9C,KAAC,CAAC,CAAC;AACL,EAAE;AACG,MAAM,aAAa,GACxB,CACE,UAAyB,EACzB,oBAA0C,EAC1C,WAAqC,mBAAmB,KAE1D,MAAK;AACH,IAAA,IAAI,OAA8B,CAAC;AACnC,IAAA,IAAI,SAAY,CAAC;IAEjB,SAAS,CAAC,UAAU,CAAC,CAAC;IAEtB,UAAU,CAAC,MAAK;AACd,QAAA,MAAM,kBAAkB,GAAGA,kBAAgB,CAAC,UAAU,CAAC,CAAC;AACxD,QAAA,OAAO,GAAG,kBAAkB,CAAC,OAAO,CAAC;AACrC,QAAA,SAAS,GAAG,kBAAkB,CAAC,SAAS,CAAC;AAC3C,KAAC,CAAC,CAAC;AACH,IAAA,EAAE,CAAC,uBAAuB,EAAE,MAAK;AAC/B,QAAA,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;AAEvC,QAAA,MAAM,YAAY,GAAG,mBAAmB,CAAC,SAAS,CAAC,CAAC;QACpD,YAAY,CAAC,IAAI,CAAC;AAChB,YAAA,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ,CAAC,IAAI;gBACnB,MAAM,EAAE,QAAQ,CAAC,MAAM;AACvB,gBAAA,QAAQ,EAAE,SAAS;AACpB,aAAA;AACF,SAAA,CAAC,CAAC;AACH,QAAA,YAAY,CAAC,UAAU,CACrB,OAAO,CAAC,YAAY,CAAC;AACnB,YAAA;AACE,gBAAA,YAAY,EAAE,MAAM;AACpB,gBAAA,OAAO,EAAE,6BAA6B;AACtC,gBAAA,OAAO,EAAE,EAAE;AACX,gBAAA,UAAU,EAAE,EAAE;AACd,gBAAA,MAAM,EAAE,EAAE;AACX,aAAA;AACF,SAAA,CAAC,CACH,CAAC;QACF,YAAY,CAAC,OAAO,EAAE,CAAC;QACvB,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;AACxB,QAAA,MAAM,WAAW,GAAmB,OAAO,CAAC,YAAY,CAAC,QAAQ,CAC/D,EAAE,CAAC,SAAS,CAAC,oBAAoB,CAAC,aAAa,CAAC,CACjD,CAAC;AACF,QAAA,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,CAAC;QACvE,MAAM,CACJ,WAAW,CAAC,oBAAoB,CAAC,cAAc,CAAC,CAAC,aAAa;AAC3D,aAAA,WAAW,CACf,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;AACxC,KAAC,CAAC,CAAC;AACL,EAAE;AACS,MAAA,YAAY,GACvB,CACE,UAAyB,EACzB,QAAgB,EAChB,YAA4C,EAC5C,QAAqC,GAAA,mBAAmB,KAE1D,MAAK;AACH,IAAA,IAAI,OAA8B,CAAC;AACnC,IAAA,IAAI,SAAY,CAAC;AACjB,IAAA,IAAI,iBAAsB,CAAC;IAE3B,SAAS,CAAC,UAAU,CAAC,CAAC;IAEtB,UAAU,CAAC,MAAK;QACd,MAAM,kBAAkB,GAAGA,kBAAgB,CACzC,UAAU,EACV,QAAQ,EACR,YAAY,CACb,CAAC;AACF,QAAA,OAAO,GAAG,kBAAkB,CAAC,OAAO,CAAC;AACrC,QAAA,SAAS,GAAG,kBAAkB,CAAC,SAAS,CAAC;AACzC,QAAA,iBAAiB,GAAG,kBAAkB,CAAC,iBAAiB,CAAC;AAC3D,KAAC,CAAC,CAAC;AACH,IAAA,EAAE,CAAC,4CAA4C,EAAE,MAAK;AACpD,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC/D,QAAQ,CAAC,OAAO,GAAG,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC;AAC1C,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;QAC3D,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC;AAEvC,QAAA,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC9B,QAAA,SAAS,CAAC,MAAM,GAAG,MAAM,CAAC;AAE1B,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;AAClC,YAAA,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE;AAClE,SAAA,CAAC,CAAC;QACH,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAClD,KAAC,CAAC,CAAC;AACH,IAAA,EAAE,CAAC,mBAAmB,EAAE,MAAK;AAC3B,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;QAC3D,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC;AAEvC,QAAA,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;AACvC,QAAA,SAAS,CAAC,MAAM,GAAG,MAAM,CAAC;AAE1B,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;AAClC,YAAA,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ,CAAC,IAAI;AACnB,gBAAA,MAAM,EAAE,MAAM;gBACd,QAAQ,EAAE,QAAQ,CAAC,QAAQ;AAC5B,aAAA;AACF,SAAA,CAAC,CAAC;QACH,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC/C,KAAC,CAAC,CAAC;AACH,IAAA,GAAG,CAAC,iBAAiB,EAAE,MAAK;AAC1B,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;QAC3D,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,GAAG,KAAK,CAAC;AAErC,QAAA,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;AACvC,QAAA,SAAS,CAAC,MAAM,GAAG,MAAM,CAAC;AAE1B,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;AAClC,YAAA,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ,CAAC,IAAI;AACnB,gBAAA,MAAM,EAAE,MAAM;gBACd,QAAQ,EAAE,QAAQ,CAAC,QAAQ;AAC5B,aAAA;AACF,SAAA,CAAC,CAAC;QACH,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC7C,KAAC,CAAC,CAAC;AACH,IAAA,GAAG,CAAC,yBAAyB,EAAE,MAAK;AAClC,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;QAC3D,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,GAAG,KAAK,CAAC;AAErC,QAAA,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;AACvC,QAAA,SAAS,CAAC,MAAM,GAAG,MAAM,CAAC;AAE1B,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;AAClC,YAAA,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ,CAAC,IAAI;AACnB,gBAAA,MAAM,EAAE,MAAM;gBACd,QAAQ,EAAE,QAAQ,CAAC,QAAQ;AAC5B,aAAA;AACF,SAAA,CAAC,CAAC;QACH,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC9C,KAAC,CAAC,CAAC;AACL;;ACxZW,MAAAA,kBAAgB,GAAG,CAC9B,UAAyB,EACzB,QAAiB,EACjB,YAA6C,KACvB;IACtB,MAAM,OAAO,GAAG,OAAO,CAAC,eAAe,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;AAChE,IAAA,MAAM,SAAS,GAAG,OAAO,CAAC,iBAAiB,CAAC;AAC5C,IAAA,MAAM,MAAM,GAAuB,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC;IAC1D,IAAI,QAAQ,IAAI,YAAY,EAAE;AAC5B,QAAA,MAAM,aAAa,GAAG,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;AACnE,QAAA,MAAM,mBAAmB,GAAG,YAAY,CAAC,aAAa,CAAC,CAAC;AACxD,QAAA,MAAM,CAAC,aAAa,GAAG,aAAa,CAAC;AACrC,QAAA,MAAM,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;AAClD,KAAA;AAED,IAAA,OAAO,MAAM,CAAC;AAChB,EAAE;AACF,MAAM,WAAW,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC;AACrC,MAAM,aAAa,GAAe;AAChC,IAAA,IAAI,EAAE,QAAQ;AACd,IAAA,UAAU,EAAE;AACV,QAAA,GAAG,EAAE;AACH,YAAA,IAAI,EAAE,QAAQ;AACf,SAAA;AACF,KAAA;CACF,CAAC;AACF,MAAM,eAAe,GAAmB;AACtC,IAAA,IAAI,EAAE,SAAS;AACf,IAAA,KAAK,EAAE,kBAAkB;CAC1B,CAAC;AACW,MAAA,qBAAqB,GAA6B;AAC7D,IAAA,IAAI,EAAE,WAAW;AACjB,IAAA,MAAM,EAAE,aAAa;AACrB,IAAA,QAAQ,EAAE,eAAe;EACzB;AACW,MAAA,4BAA4B,GAAG,CAC1C,OAA4B,EAC5B,QAAkC,EAClC,YAAuB,KACrB;AACF,IAAA,cAAc,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;AAClC,IAAA,mBAAmB,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC;AAClD,QAAA,IAAI,EAAE;YACJ,IAAI,EAAE,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE;YACpC,MAAM,EAAE,QAAQ,CAAC,MAAM;AACvB,YAAA,QAAQ,EAAE,SAAS;AACpB,SAAA;AACF,KAAA,CAAC,CAAC;AACH,IAAA,OAAO,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC;IACrC,OAAO,CAAC,aAAa,EAAE,CAAC;AACxB,IAAA,YAAY,EAAE,CAAC;AACjB,EAAE;AAEW,MAAA,cAAc,GACzB,CACE,UAAyB,EACzB,QAAgB,EAChB,YAA4C,EAC5C,QAAqC,GAAA,qBAAqB,KAE5D,MAAK;AACH,IAAA,IAAI,OAA8B,CAAC;AACnC,IAAA,IAAI,aAA2B,CAAC;AAChC,IAAA,IAAI,mBAAwB,CAAC;AAC7B,IAAA,IAAI,SAAY,CAAC;IAEjB,SAAS,CAAC,UAAU,CAAC,CAAC;IAEtB,UAAU,CAAC,MAAK;QACd,MAAM,kBAAkB,GAAGA,kBAAgB,CACzC,UAAU,EACV,QAAQ,EACR,YAAY,CACb,CAAC;AACF,QAAA,OAAO,GAAG,kBAAkB,CAAC,OAAO,CAAC;AACrC,QAAA,mBAAmB,GAAG,kBAAkB,CAAC,mBAAmB,CAAC;AAC7D,QAAA,aAAa,GAAG,kBAAkB,CAAC,aAAa,CAAC;AACjD,QAAA,SAAS,GAAG,kBAAkB,CAAC,SAAS,CAAC;AAC3C,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,sBAAsB,EAAE,MAAK;AAC9B,QAAA,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;AACvC,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;AACxD,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,UAAU,CACvC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,CAC7C,CAAC;QACF,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACrC,MAAM,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;;QAElD,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7C,MAAM,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;QAEjD,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC3E,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,wBAAwB,EAAE,MAAK;AAChC,QAAA,MAAM,KAAK,GAAG;AACZ,YAAA,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE;AAClB,YAAA,MAAM,EAAE;AACN,gBAAA,IAAI,EAAE,QAAQ;AACd,gBAAA,UAAU,EAAE;AACV,oBAAA,GAAG,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;AACzB,iBAAA;AACF,aAAA;YACD,QAAQ,EAAE,QAAQ,CAAC,QAAQ;SAC5B,CAAC;AACF,QAAA,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;AACvC,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;AACrD,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,UAAU,CACvC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,CACvC,CAAC;QACF,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;QAExB,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACjC,MAAM,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;QAE9C,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC3C,MAAM,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;QAEjD,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC3E,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,mCAAmC,EAAE,MAAK;AAC3C,QAAA,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;AACvC,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;AACxD,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,UAAU,CACvC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,CAC7C,CAAC;QACF,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,mBAAmB,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,UAAU,CACvD,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,OAAO,CAAC,CACrC,CAAC;QACF,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACrC,QAAA,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC1D,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,oCAAoC,EAAE,MAAK;AAC5C,QAAA,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;AACvC,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;AACxD,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,UAAU,CACvC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,CAC7C,CAAC;QACF,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,mBAAmB,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,UAAU,CACvD,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,SAAS,CAAC,CACvC,CAAC;QACF,OAAO,CAAC,aAAa,EAAE,CAAC;QAExB,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACvC,MAAM,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC7C,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,+BAA+B,EAAE,MAAK;AACvC,QAAA,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;AACvC,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;AACxD,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,UAAU,CACvC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,CAC7C,CAAC;QACF,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,mBAAmB,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,UAAU,CACvD,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,IAAI,CAAC,CAClC,CAAC;QACF,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClC,MAAM,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC7C,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,kCAAkC,EAAE,MAAK;AAC1C,QAAA,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;AACvC,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;AACxD,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,UAAU,CACvC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,CAC7C,CAAC;QACF,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,mBAAmB,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,UAAU,CACvD,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,OAAO,CAAC,CACrC,CAAC;QACF,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACrC,QAAA,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC1D,KAAC,CAAC,CAAC;;AAGH,IAAA,EAAE,CAAC,iBAAiB,EAAE,MAAK;AACzB,QAAA,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;AACvC,QAAA,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC;AAE1B,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;AAClC,YAAA,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ,CAAC,IAAI;gBACnB,MAAM,EAAE,QAAQ,CAAC,MAAM;gBACvB,QAAQ,EAAE,QAAQ,CAAC,QAAQ;AAC5B,aAAA;AACF,SAAA,CAAC,CAAC;QACH,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,MAAM,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAClD,KAAC,CAAC,CAAC;;AAEH,IAAA,EAAE,CAAC,eAAe,EAAE,MAAK;AACvB,QAAA,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;AACvC,QAAA,SAAS,CAAC,OAAO,GAAG,KAAK,CAAC;AAE1B,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;AAClC,YAAA,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ,CAAC,IAAI;gBACnB,MAAM,EAAE,QAAQ,CAAC,MAAM;gBACvB,QAAQ,EAAE,QAAQ,CAAC,QAAQ;AAC5B,aAAA;AACF,SAAA,CAAC,CAAC;QACH,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;AACxB,QAAA,MAAM,cAAc,GAClB,MAAM,KAAK,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;AAC7D,QAAA,MAAM,SAAS,GAAG,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QAC3D,MAAM,CAAC,cAAc,IAAI,SAAS,CAAC,CAAC,UAAU,EAAE,CAAC;AACnD,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,gCAAgC,EAAE,MAAK;AACxC,QAAA,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;AACvC,QAAA,SAAS,CAAC,EAAE,GAAG,MAAM,CAAC;AACtB,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;AAClC,YAAA,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ,CAAC,IAAI;gBACnB,MAAM,EAAE,QAAQ,CAAC,MAAM;gBACvB,QAAQ,EAAE,QAAQ,CAAC,QAAQ;AAC5B,aAAA;AACF,SAAA,CAAC,CAAC;QACH,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;AACxB,QAAA,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACtD,KAAC,CAAC,CAAC;AACL,EAAE;AACS,MAAA,oBAAoB,GAC/B,CACE,UAAyB,EACzB,QAAgB,EAChB,YAA4C,EAC5C,QAAqC,GAAA,qBAAqB,KAE5D,MAAK;AACH,IAAA,IAAI,OAA8B,CAAC;AACnC,IAAA,IAAI,mBAAwB,CAAC;AAC7B,IAAA,IAAI,SAAY,CAAC;IAEjB,SAAS,CAAC,UAAU,CAAC,CAAC;IAEtB,UAAU,CAAC,MAAK;QACd,MAAM,kBAAkB,GAAGA,kBAAgB,CACzC,UAAU,EACV,QAAQ,EACR,YAAY,CACb,CAAC;AACF,QAAA,OAAO,GAAG,kBAAkB,CAAC,OAAO,CAAC;AACrC,QAAA,mBAAmB,GAAG,kBAAkB,CAAC,mBAAmB,CAAC;AAC7D,QAAA,SAAS,GAAG,kBAAkB,CAAC,SAAS,CAAC;AAC3C,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,+BAA+B,EAAE,MAAK;AACvC,QAAA,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAA0B,CAAC;AAEzD,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;AAClC,YAAA,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ,CAAC,IAAI;gBACnB,MAAM,EAAE,QAAQ,CAAC,MAAM;AACvB,gBAAA,QAAQ,EAAE,SAAS;AACpB,aAAA;AACF,SAAA,CAAC,CAAC;QACH,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,SAAS,CAAC,QAAQ,EAAE,CAAC;QAErB,MAAM,GAAG,GAAG,KAAK,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;AACzC,QAAA,mBAAmB,CAAC,KAAK,GAAG,OAAO,CAAC;QACpC,IAAI,mBAAmB,CAAC,aAAa,EAAE;YACrC,mBAAmB,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;AACvD,SAAA;;QAED,OAAO,CAAC,aAAa,EAAE,CAAC;AACxB,QAAA,MAAM,CAAC,GAAG,CAAC,CAAC,gBAAgB,EAAE,CAAC;AAC/B,QAAA,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC1D,KAAC,CAAC,CAAC;AACL,EAAE;AACG,MAAM,eAAe,GAC1B,CACE,UAAyB,EACzB,oBAA0C,EAC1C,WAAqC,qBAAqB,KAE5D,MAAK;AACH,IAAA,IAAI,OAA8B,CAAC;AACnC,IAAA,IAAI,SAAY,CAAC;IAEjB,SAAS,CAAC,UAAU,CAAC,CAAC;IAEtB,UAAU,CAAC,MAAK;AACd,QAAA,MAAM,kBAAkB,GAAGA,kBAAgB,CAAC,UAAU,CAAC,CAAC;AACxD,QAAA,OAAO,GAAG,kBAAkB,CAAC,OAAO,CAAC;AACrC,QAAA,SAAS,GAAG,kBAAkB,CAAC,SAAS,CAAC;AAC3C,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,uBAAuB,EAAE,MAAK;AAC/B,QAAA,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;AAEvC,QAAA,MAAM,YAAY,GAAG,mBAAmB,CAAC,SAAS,CAAC,CAAC;QACpD,YAAY,CAAC,IAAI,CAAC;AAChB,YAAA,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ,CAAC,IAAI;gBACnB,MAAM,EAAE,QAAQ,CAAC,MAAM;AACvB,gBAAA,QAAQ,EAAE,SAAS;AACpB,aAAA;AACF,SAAA,CAAC,CAAC;AACH,QAAA,YAAY,CAAC,UAAU,CACrB,OAAO,CAAC,YAAY,CAAC;AACnB,YAAA;AACE,gBAAA,YAAY,EAAE,MAAM;AACpB,gBAAA,OAAO,EAAE,6BAA6B;AACtC,gBAAA,OAAO,EAAE,EAAE;AACX,gBAAA,UAAU,EAAE,EAAE;AACd,gBAAA,MAAM,EAAE,EAAE;AACX,aAAA;AACF,SAAA,CAAC,CACH,CAAC;QACF,YAAY,CAAC,OAAO,EAAE,CAAC;QACvB,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;AACxB,QAAA,MAAM,WAAW,GAAmB,OAAO,CAAC,YAAY,CAAC,QAAQ,CAC/D,EAAE,CAAC,SAAS,CAAC,oBAAoB,CAAC,aAAa,CAAC,CACjD,CAAC;AACF,QAAA,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,CAAC;QACvE,MAAM,CACJ,WAAW,CAAC,oBAAoB,CAAC,cAAc,CAAC,CAAC,aAAa;AAC3D,aAAA,WAAW,CACf,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;AACxC,KAAC,CAAC,CAAC;AACL,EAAE;AAEJ,MAAM,gBAAgB,GAAe;AACnC,IAAA,IAAI,EAAE,QAAQ;AACd,IAAA,UAAU,EAAE;AACV,QAAA,GAAG,EAAE;AACH,YAAA,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,CAAC,KAAK;AACf,YAAA,OAAO,EAAE,EAAE;AACX,YAAA,UAAU,EAAE,CAAC;AACd,SAAA;AACF,KAAA;CACF,CAAC;AACW,MAAA,kBAAkB,GAA6B;AAC1D,IAAA,IAAI,EAAE,WAAW;AACjB,IAAA,MAAM,EAAE,gBAAgB;AACxB,IAAA,QAAQ,EAAE,eAAe;EACzB;AAEW,MAAA,yBAAyB,GACpC,CACE,UAAyB,EACzB,QAAgB,EAChB,YAA4C,EAC5C,QAAqC,GAAA,kBAAkB,KAEzD,MAAK;AACH,IAAA,IAAI,OAA8B,CAAC;AACnC,IAAA,IAAI,mBAAwB,CAAC;IAE7B,SAAS,CAAC,UAAU,CAAC,CAAC;IAEtB,UAAU,CAAC,MAAK;QACd,MAAM,kBAAkB,GAAGA,kBAAgB,CACzC,UAAU,EACV,QAAQ,EACR,YAAY,CACb,CAAC;AACF,QAAA,OAAO,GAAG,kBAAkB,CAAC,OAAO,CAAC;AACrC,QAAA,mBAAmB,GAAG,kBAAkB,CAAC,mBAAmB,CAAC;AAC/D,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,mCAAmC,EAAE,MAAK;AAC3C,QAAA,cAAc,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;QAClC,mBAAmB,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,UAAU,CACvD,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,CAC7C,CAAC;AACF,QAAA,OAAO,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC;QACrC,OAAO,CAAC,aAAa,EAAE,CAAC;;QAGxB,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC3C,MAAM,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC/C,MAAM,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC7C,KAAC,CAAC,CAAC;AACL;;AC5YF,MAAM,gBAAgB,GAAG,CACvB,UAAyB,EACzB,QAAiB,KACK;IACtB,MAAM,OAAO,GAAG,OAAO,CAAC,eAAe,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;AAChE,IAAA,MAAM,SAAS,GAAG,OAAO,CAAC,iBAAiB,CAAC;AAC5C,IAAA,MAAM,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxE,IAAA,MAAM,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAC;AAC5E,IAAA,MAAM,MAAM,GAAuB;QACjC,OAAO;QACP,SAAS;QACT,YAAY;QACZ,YAAY;KACb,CAAC;AACF,IAAA,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;MACW,gBAAgB,GAAG,EAAE,GAAG,EAAE,KAAK,GAAG;AAClC,MAAA,kBAAkB,GAAe;AAC5C,IAAA,IAAI,EAAE,QAAQ;AACd,IAAA,UAAU,EAAE;AACV,QAAA,GAAG,EAAE;AACH,YAAA,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,CAAC,KAAK;AACf,YAAA,OAAO,EAAE,KAAK;AACd,YAAA,OAAO,EAAE,IAAI;AACd,SAAA;AACF,KAAA;EACD;AACW,MAAA,oBAAoB,GAAmB;AAClD,IAAA,IAAI,EAAE,SAAS;AACf,IAAA,KAAK,EAAE,kBAAkB;AACzB,IAAA,OAAO,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;EACzB;AACW,MAAA,oBAAoB,GAA6B;AAC5D,IAAA,IAAI,EAAE,gBAAgB;AACtB,IAAA,MAAM,EAAE,kBAAkB;AAC1B,IAAA,QAAQ,EAAE,oBAAoB;EAC9B;AAEK,MAAM,aAAa,GACxB,CACE,UAAyB,EACzB,QAAiB,KAEnB,MAAK;AACH,IAAA,IAAI,OAA8B,CAAC;AACnC,IAAA,IAAI,YAA0B,CAAC;AAC/B,IAAA,IAAI,YAA0B,CAAC;AAC/B,IAAA,IAAI,SAAY,CAAC;IAEjB,SAAS,CAAC,UAAU,CAAC,CAAC;IAEtB,UAAU,CAAC,MAAK;QACd,MAAM,kBAAkB,GAAG,gBAAgB,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;AAClE,QAAA,OAAO,GAAG,kBAAkB,CAAC,OAAO,CAAC;AACrC,QAAA,YAAY,GAAG,kBAAkB,CAAC,YAAY,CAAC;AAC/C,QAAA,YAAY,GAAG,kBAAkB,CAAC,YAAY,CAAC;AAC/C,QAAA,SAAS,GAAG,kBAAkB,CAAC,SAAS,CAAC;AAC3C,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,sBAAsB,EAAE,MAAK;AAC9B,QAAA,SAAS,CAAC,QAAQ,GAAG,oBAAoB,CAAC,QAAQ,CAAC;AACnD,QAAA,SAAS,CAAC,MAAM,GAAG,oBAAoB,CAAC,MAAM,CAAC;AAE/C,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;AAClC,YAAA,IAAI,EAAE;gBACJ,IAAI,EAAE,oBAAoB,CAAC,IAAI;gBAC/B,MAAM,EAAE,oBAAoB,CAAC,MAAM;gBACnC,QAAQ,EAAE,oBAAoB,CAAC,QAAQ;AACxC,aAAA;AACF,SAAA,CAAC,CAAC;QACH,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACnC,QAAA,MAAM,CAAC,YAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;AAExD,QAAA,MAAM,CAAC,YAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACpD,QAAA,MAAM,CAAC,YAAY,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC;AACxD,QAAA,MAAM,CAAC,YAAY,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACvD,QAAA,MAAM,CAAC,YAAY,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5D,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC3E,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,uBAAuB,EAAE,MAAK;AAC/B,QAAA,SAAS,CAAC,QAAQ,GAAG,oBAAoB,CAAC,QAAQ,CAAC;AACnD,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC;QACvE,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,GAAG,SAAS,CAAC;QACvC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,GAAG,CAAC,EAAE,CAAC;QACpC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,GAAG,EAAE,CAAC;QACnC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,GAAG,CAAC,CAAC;QAClC,cAAc,CAAC,OAAO,EAAE;YACtB,QAAQ,EAAE,oBAAoB,CAAC,QAAQ;YACvC,MAAM;AACN,YAAA,IAAI,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;AAClB,SAAA,CAAC,CAAC;QACH,mBAAmB,CAAC,SAAS,CAAC,CAAC,UAAU,CACvC,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,oBAAoB,CAAC,QAAQ,CAAC,CACjE,CAAC;AAEF,QAAA,OAAO,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC;QACrC,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAChC,QAAA,MAAM,CAAC,YAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;;AAErD,QAAA,MAAM,CAAC,YAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACpD,QAAA,MAAM,CAAC,YAAY,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;AACrD,QAAA,MAAM,CAAC,YAAY,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACpD,QAAA,MAAM,CAAC,YAAY,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;QAE5D,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC3E,KAAC,CAAC,CAAC;AAEH,IAAA,EAAE,CAAC,mCAAmC,EAAE,MAAK;AAC3C,QAAA,SAAS,CAAC,QAAQ,GAAG,oBAAoB,CAAC,QAAQ,CAAC;AACnD,QAAA,SAAS,CAAC,MAAM,GAAG,oBAAoB,CAAC,MAAM,CAAC;AAE/C,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;AAClC,YAAA,IAAI,EAAE;gBACJ,IAAI,EAAE,oBAAoB,CAAC,IAAI;gBAC/B,MAAM,EAAE,oBAAoB,CAAC,MAAM;gBACnC,QAAQ,EAAE,oBAAoB,CAAC,QAAQ;AACxC,aAAA;AACF,SAAA,CAAC,CAAC;QACH,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;AAExB,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,UAAU,CACvC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,IAAI,CAAC,CAClC,CAAC;QACF,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAClC,QAAA,MAAM,CAAC,YAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACzD,KAAC,CAAC,CAAC;AACH,IAAA,EAAE,CAAC,oCAAoC,EAAE,MAAK;AAC5C,QAAA,SAAS,CAAC,QAAQ,GAAG,oBAAoB,CAAC,QAAQ,CAAC;AACnD,QAAA,SAAS,CAAC,MAAM,GAAG,oBAAoB,CAAC,MAAM,CAAC;AAE/C,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;AAClC,YAAA,IAAI,EAAE;gBACJ,IAAI,EAAE,oBAAoB,CAAC,IAAI;gBAC/B,MAAM,EAAE,oBAAoB,CAAC,MAAM;gBACnC,QAAQ,EAAE,oBAAoB,CAAC,QAAQ;AACxC,aAAA;AACF,SAAA,CAAC,CAAC;QACH,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;AAExB,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,UAAU,CACvC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,SAAS,CAAC,CACvC,CAAC;QACF,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACvC,QAAA,MAAM,CAAC,YAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC9D,KAAC,CAAC,CAAC;AACH,IAAA,EAAE,CAAC,+BAA+B,EAAE,MAAK;AACvC,QAAA,SAAS,CAAC,QAAQ,GAAG,oBAAoB,CAAC,QAAQ,CAAC;AACnD,QAAA,SAAS,CAAC,MAAM,GAAG,oBAAoB,CAAC,MAAM,CAAC;AAE/C,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;AAClC,YAAA,IAAI,EAAE;gBACJ,IAAI,EAAE,oBAAoB,CAAC,IAAI;gBAC/B,MAAM,EAAE,oBAAoB,CAAC,MAAM;gBACnC,QAAQ,EAAE,oBAAoB,CAAC,QAAQ;AACxC,aAAA;AACF,SAAA,CAAC,CAAC;QACH,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;AAExB,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,UAAU,CACvC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,IAAI,CAAC,CAClC,CAAC;QACF,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAClC,QAAA,MAAM,CAAC,YAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACzD,KAAC,CAAC,CAAC;AACH,IAAA,EAAE,CAAC,kCAAkC,EAAE,MAAK;AAC1C,QAAA,SAAS,CAAC,QAAQ,GAAG,oBAAoB,CAAC,QAAQ,CAAC;AACnD,QAAA,SAAS,CAAC,MAAM,GAAG,oBAAoB,CAAC,MAAM,CAAC;AAE/C,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;AAClC,YAAA,IAAI,EAAE;gBACJ,IAAI,EAAE,oBAAoB,CAAC,IAAI;gBAC/B,MAAM,EAAE,oBAAoB,CAAC,MAAM;gBACnC,QAAQ,EAAE,oBAAoB,CAAC,QAAQ;AACxC,aAAA;AACF,SAAA,CAAC,CAAC;QACH,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;AAExB,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,UAAU,CACvC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,KAAK,CAAC,CACnC,CAAC;AACF,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,UAAU,CACvC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,OAAO,CAAC,CACrC,CAAC;QAEF,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACnC,QAAA,MAAM,CAAC,YAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC1D,KAAC,CAAC,CAAC;;AAEH,IAAA,EAAE,CAAC,iBAAiB,EAAE,MAAK;AACzB,QAAA,SAAS,CAAC,QAAQ,GAAG,oBAAoB,CAAC,QAAQ,CAAC;AACnD,QAAA,SAAS,CAAC,MAAM,GAAG,oBAAoB,CAAC,MAAM,CAAC;AAC/C,QAAA,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC;AAE1B,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;AAClC,YAAA,IAAI,EAAE;gBACJ,IAAI,EAAE,oBAAoB,CAAC,IAAI;gBAC/B,MAAM,EAAE,oBAAoB,CAAC,MAAM;gBACnC,QAAQ,EAAE,oBAAoB,CAAC,QAAQ;AACxC,aAAA;AACF,SAAA,CAAC,CAAC;QACH,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;AACxB,QAAA,MAAM,CAAC,YAAY,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC7D,KAAC,CAAC,CAAC;AACH,IAAA,EAAE,CAAC,eAAe,EAAE,MAAK;AACvB,QAAA,SAAS,CAAC,QAAQ,GAAG,oBAAoB,CAAC,QAAQ,CAAC;AACnD,QAAA,SAAS,CAAC,MAAM,GAAG,oBAAoB,CAAC,MAAM,CAAC;AAC/C,QAAA,SAAS,CAAC,OAAO,GAAG,KAAK,CAAC;AAE1B,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;AAClC,YAAA,IAAI,EAAE;gBACJ,IAAI,EAAE,oBAAoB,CAAC,IAAI;gBAC/B,MAAM,EAAE,oBAAoB,CAAC,MAAM;gBACnC,QAAQ,EAAE,oBAAoB,CAAC,QAAQ;AACxC,aAAA;AACF,SAAA,CAAC,CAAC;QACH,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,SAAS,CAAC,QAAQ,EAAE,CAAC;AACrB,QAAA,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACvE,KAAC,CAAC,CAAC;AACH,IAAA,EAAE,CAAC,gCAAgC,EAAE,MAAK;AACxC,QAAA,SAAS,CAAC,QAAQ,GAAG,oBAAoB,CAAC,QAAQ,CAAC;AACnD,QAAA,SAAS,CAAC,MAAM,GAAG,oBAAoB,CAAC,MAAM,CAAC;AAC/C,QAAA,SAAS,CAAC,EAAE,GAAG,MAAM,CAAC;AACtB,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;AAClC,YAAA,IAAI,EAAE;gBACJ,IAAI,EAAE,oBAAoB,CAAC,IAAI;gBAC/B,MAAM,EAAE,oBAAoB,CAAC,MAAM;gBACnC,QAAQ,EAAE,oBAAoB,CAAC,QAAQ;AACxC,aAAA;AACF,SAAA,CAAC,CAAC;QACH,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;AACxB,QAAA,MAAM,CAAC,YAAY,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACrD,KAAC,CAAC,CAAC;AACL,EAAE;AACG,MAAM,mBAAmB,GAC9B,CACE,UAAyB,EACzB,QAAiB,KAEnB,MAAK;AACH,IAAA,IAAI,OAA8B,CAAC;AACnC,IAAA,IAAI,SAAY,CAAC;IAEjB,SAAS,CAAC,UAAU,CAAC,CAAC;IAEtB,UAAU,CAAC,MAAK;QACd,MAAM,kBAAkB,GAAG,gBAAgB,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;AAClE,QAAA,OAAO,GAAG,kBAAkB,CAAC,OAAO,CAAC;AACrC,QAAA,SAAS,GAAG,kBAAkB,CAAC,SAAS,CAAC;AAC3C,KAAC,CAAC,CAAC;AAEH,IAAA,GAAG,CAAC,+BAA+B,EAAE,YAAW;AAC9C,QAAA,SAAS,CAAC,QAAQ,GAAG,oBAAoB,CAAC,QAAQ,CAAC;AACnD,QAAA,SAAS,CAAC,MAAM,GAAG,oBAAoB,CAAC,MAAM,CAAC;AAE/C,QAAA,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC;AAClC,YAAA,IAAI,EAAE;gBACJ,IAAI,EAAE,oBAAoB,CAAC,IAAI;gBAC/B,MAAM,EAAE,oBAAoB,CAAC,MAAM;gBACnC,QAAQ,EAAE,oBAAoB,CAAC,QAAQ;AACxC,aAAA;AACF,SAAA,CAAC,CAAC;QACH,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;QAExB,MAAM,GAAG,GAAG,KAAK,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;AAEzC,QAAA,MAAM,aAAa,GAAG,OAAO,CAAC,YAAY,CAAC,KAAK,CAC9C,EAAE,CAAC,GAAG,CAAC,aAAa,CAAC,CACtB,CAAC,aAAa,CAAC;AAEhB,QAAA,MAAM,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC,KAAK,CAC7C,EAAE,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAC9B,CAAC,aAAa,CAAC;AAChB,QAAA,MAAM,UAAU,GAAG,YAAY,CAAC,qBAAqB,EAAE,CAAC;QACxD,MAAM,CAAC,GAAG,UAAU,CAAC,IAAI,GAAG,UAAU,CAAC,KAAK,GAAG,GAAG,CAAC;QACnD,MAAM,CAAC,GAAG,UAAU,CAAC,GAAG,GAAG,UAAU,CAAC,MAAM,GAAG,GAAG,CAAC;AAEnD,QAAA,aAAa,CAAC,aAAa,EAAE,gBAAgB,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;QAGrE,OAAO,CAAC,aAAa,EAAE,CAAC;AACxB,QAAA,MAAM,OAAO,CAAC,UAAU,EAAE,CAAC;AAC3B,QAAA,MAAM,CAAC,GAAG,CAAC,CAAC,gBAAgB,EAAE,CAAC;AACjC,KAAC,CAAC,CAAC;AACL,EAAE;AACG,MAAM,cAAc,GACzB,CACE,UAAyB,EACzB,QAAiB,EACjB,oBAA0C,KAE5C,MAAK;AACH,IAAA,IAAI,OAA8B,CAAC;AACnC,IAAA,IAAI,SAAY,CAAC;IAEjB,SAAS,CAAC,UAAU,CAAC,CAAC;IAEtB,UAAU,CAAC,MAAK;QACd,MAAM,kBAAkB,GAAG,gBAAgB,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;AAClE,QAAA,OAAO,GAAG,kBAAkB,CAAC,OAAO,CAAC;AACrC,QAAA,SAAS,GAAG,kBAAkB,CAAC,SAAS,CAAC;AAC3C,KAAC,CAAC,CAAC;AACH,IAAA,EAAE,CAAC,uBAAuB,EAAE,MAAK;AAC/B,QAAA,SAAS,CAAC,QAAQ,GAAG,oBAAoB,CAAC,QAAQ,CAAC;AACnD,QAAA,SAAS,CAAC,MAAM,GAAG,oBAAoB,CAAC,MAAM,CAAC;AAE/C,QAAA,MAAM,YAAY,GAAG,mBAAmB,CAAC,SAAS,CAAC,CAAC;QACpD,YAAY,CAAC,IAAI,CAAC;AAChB,YAAA,IAAI,EAAE;gBACJ,IAAI,EAAE,oBAAoB,CAAC,IAAI;gBAC/B,MAAM,EAAE,oBAAoB,CAAC,MAAM;AACnC,gBAAA,QAAQ,EAAE,SAAS;AACpB,aAAA;AACF,SAAA,CAAC,CAAC;AACH,QAAA,YAAY,CAAC,UAAU,CACrB,OAAO,CAAC,YAAY,CAAC;AACnB,YAAA;AACE,gBAAA,YAAY,EAAE,MAAM;AACpB,gBAAA,OAAO,EAAE,6BAA6B;AACtC,gBAAA,OAAO,EAAE,EAAE;AACX,gBAAA,UAAU,EAAE,EAAE;AACd,gBAAA,MAAM,EAAE,EAAE;AACX,aAAA;AACF,SAAA,CAAC,CACH,CAAC;QACF,YAAY,CAAC,OAAO,EAAE,CAAC;QAEvB,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,OAAO,CAAC,aAAa,EAAE,CAAC;AACxB,QAAA,MAAM,WAAW,GAAmB,OAAO,CAAC,YAAY,CAAC,QAAQ,CAC/D,EAAE,CAAC,SAAS,CAAC,oBAAoB,CAAC,aAAa,CAAC,CACjD,CAAC;AACF,QAAA,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,CAAC;QACvE,MAAM,CACJ,WAAW,CAAC,oBAAoB,CAAC,cAAc,CAAC,CAAC,aAAa;AAC3D,aAAA,WAAW,CACf,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;AACxC,KAAC,CAAC,CAAC;AACL,EAAE;AAEJ;AACA,MAAM,gBAAgB,GAAG,CAAC,IAAY,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,KAAI;IAClE,MAAM,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;AAEjD,IAAA,KAAK,CAAC,cAAc,CAClB,IAAI,EACJ,IAAI,kBACJ,KAAK,mBACL,MAAM,aACN,CAAC,eACD,CAAC,gBACD,CAAC,gBACD,CAAC,gBACD,CAAC,gBACD,KAAK,gBACL,KAAK,eACL,KAAK,iBACL,KAAK,gBACL,MAAM,eACN,IAAI,qBACL,CAAC;;;AAIF,IAAA,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,SAAS,EAAE,EAAE,GAAG,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC;AAE1D,IAAA,OAAO,KAAK,CAAC;AACf,CAAC,CAAC;AACF;AACA,MAAM,aAAa,GAAG,CAAC,IAAmB,EAAE,KAAY,KAAW;AACjE,IAAA,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AAC1B,IAAA,OAAO,KAAK,CAAC;AACf,CAAC;;AClbD;;;;;;;;;;;;;;;;;;;;;;;AAuBE;MAQW,oBAAoB,GAAG,CAClC,QAAa,EACb,EAAE,YAAY,GAAG,EAAE,EAAE,OAAO,GAAG,EAAE,EAAE,SAAS,GAAG,EAAE,EAAA,GAAU,EAAE,KACjC;IAC5B,OAAO,CAAC,sBAAsB,CAAC;QAC7B,YAAY,EAAE,CAAC,QAAQ,EAAE,eAAe,EAAE,eAAe,EAAE,GAAG,YAAY,CAAC;QAC3E,OAAO;AACP,QAAA,SAAS,EAAE,CAAC,uBAAuB,EAAE,GAAG,SAAS,CAAC;KACnD,CAAC,CAAC,iBAAiB,EAAE,CAAC;AACvB,IAAA,OAAO,OAAO,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;AAC3C;;ACzCA;;;;;;;;;;;;;;;;;;;;;;;AAuBE;;ACvBF;;AAEG;;;;"}